{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\Desktop\\\\Clients\\\\shed-configurator\\\\shed_v4\\\\src\\\\components\\\\DropdownContent\\\\InnerComponents\\\\SelectionComponentContainer.js\";\nimport React, { useState, setState } from \"react\";\nimport SelectionComponent from \"./SelectionComponent\";\nimport \"./SelectionComponentContainer.css\";\nimport Container from \"./../../Container/Container\";\nimport SizeContent from \"../SizeContent/SizeContent\";\nimport { getInitialData } from \"../../../utils/api\";\nimport InteriorContent from \"../InteriorContent/InteriorContent\";\nimport ExteriorContent from \"../ExteriorContent/ExteriorContent\";\n\nconst SelectionComponentContainer = ({\n  type,\n  setPriceEvent,\n  setSquareFootageEvent,\n  interiorClickEvent,\n  updateSizing,\n  updateConfiguration,\n  size,\n  setSelectedColor\n}) => {\n  const [multiple, setMultiple] = React.useState(false);\n  const [total, setTotal] = React.useState(0);\n  const [totalSquareFootage, setTotalSquareFootage] = React.useState(8 * 8);\n  const [color, setColor] = React.useState(\"#c8e4c5\");\n  const data = getInitialData(type);\n\n  const setSquareFootageHandler = option => {\n    setTotalSquareFootage(option.length * option.width);\n    setTotal(option.price);\n    setSquareFootageEvent(option.length * option.width);\n  };\n\n  const setValueHandler = (e, perSquareFoot, color) => {\n    if (color !== null) {\n      setColor(color);\n      setSelectedColor(color);\n    }\n\n    const price = Number(e.target.value);\n\n    if (perSquareFoot) {\n      setTotal(price * totalSquareFootage);\n    } else {\n      setTotal(Number(e.target.value));\n    }\n\n    setPriceEvent(type, 20);\n  };\n\n  function getContent(type) {\n    if (type === \"Sizing\") {\n      return /*#__PURE__*/React.createElement(SizeContent, {\n        data: data,\n        multiple: false,\n        type: type,\n        setPriceEvent: setPriceEvent,\n        clickEvent: setSquareFootageEvent,\n        updateSizing: updateSizing,\n        size: size,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      });\n    } else if (type === \"Interior\") {\n      return /*#__PURE__*/React.createElement(InteriorContent, {\n        clickEvent: interiorClickEvent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 14\n        }\n      });\n    } else if (type === \"Exterior\") {\n      return /*#__PURE__*/React.createElement(ExteriorContent, {\n        clickEvent: setPriceEvent,\n        type: type,\n        size: size,\n        data: data,\n        updateConfiguration: updateConfiguration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(Container, {\n        classes: \"SelectionComponentContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, data.map(option => {\n        return /*#__PURE__*/React.createElement(SelectionComponent, {\n          key: option.id,\n          value: option.price ? Number(option.price) : Number(option.price_per_sf),\n          clickEvent: setValueHandler,\n          label: option.name,\n          price: option.price ? option.price : option.price_per_sf,\n          type: type,\n          multiple: multiple,\n          perSquareFoot: option.price_per_sf !== undefined,\n          color: type === \"Colors\" ? option.hexcode : null,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }\n        });\n      }));\n    }\n  }\n\n  return getContent(type);\n};\n\nexport default SelectionComponentContainer;","map":{"version":3,"sources":["C:/Users/Ryan/Desktop/Clients/shed-configurator/shed_v4/src/components/DropdownContent/InnerComponents/SelectionComponentContainer.js"],"names":["React","useState","setState","SelectionComponent","Container","SizeContent","getInitialData","InteriorContent","ExteriorContent","SelectionComponentContainer","type","setPriceEvent","setSquareFootageEvent","interiorClickEvent","updateSizing","updateConfiguration","size","setSelectedColor","multiple","setMultiple","total","setTotal","totalSquareFootage","setTotalSquareFootage","color","setColor","data","setSquareFootageHandler","option","length","width","price","setValueHandler","e","perSquareFoot","Number","target","value","getContent","map","id","price_per_sf","name","undefined","hexcode"],"mappings":"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","sourcesContent":["import React, { useState, setState } from \"react\";\nimport SelectionComponent from \"./SelectionComponent\";\nimport \"./SelectionComponentContainer.css\";\nimport Container from \"./../../Container/Container\";\nimport SizeContent from \"../SizeContent/SizeContent\";\nimport { getInitialData } from \"../../../utils/api\";\nimport InteriorContent from \"../InteriorContent/InteriorContent\";\nimport ExteriorContent from \"../ExteriorContent/ExteriorContent\";\n\nconst SelectionComponentContainer = ({\n  type,\n  setPriceEvent,\n  setSquareFootageEvent,\n  interiorClickEvent,\n  updateSizing,\n  updateConfiguration,\n  size,\n  setSelectedColor,\n}) => {\n  const [multiple, setMultiple] = React.useState(false);\n  const [total, setTotal] = React.useState(0);\n  const [totalSquareFootage, setTotalSquareFootage] = React.useState(8 * 8);\n  const [color, setColor] = React.useState(\"#c8e4c5\");\n  const data = getInitialData(type);\n\n  const setSquareFootageHandler = (option) => {\n    setTotalSquareFootage(option.length * option.width);\n    setTotal(option.price);\n    setSquareFootageEvent(option.length * option.width);\n  };\n\n  const setValueHandler = (e, perSquareFoot, color) => {\n    if (color !== null) {\n      setColor(color);\n      setSelectedColor(color);\n    }\n    const price = Number(e.target.value);\n    if (perSquareFoot) {\n      setTotal(price * totalSquareFootage);\n    } else {\n      setTotal(Number(e.target.value));\n    }\n    setPriceEvent(type, 20);\n  };\n  function getContent(type) {\n    if (type === \"Sizing\") {\n      return (\n        <SizeContent\n          data={data}\n          multiple={false}\n          type={type}\n          setPriceEvent={setPriceEvent}\n          clickEvent={setSquareFootageEvent}\n          updateSizing={updateSizing}\n          size={size}\n        />\n      );\n    } else if (type === \"Interior\") {\n      return <InteriorContent clickEvent={interiorClickEvent} />;\n    } else if (type === \"Exterior\") {\n      return (\n        <ExteriorContent\n          clickEvent={setPriceEvent}\n          type={type}\n          size={size}\n          data={data}\n          updateConfiguration={updateConfiguration}\n        />\n      );\n    } else {\n      return (\n        <Container classes=\"SelectionComponentContainer\">\n          {data.map((option) => {\n            return (\n              <SelectionComponent\n                key={option.id}\n                value={\n                  option.price\n                    ? Number(option.price)\n                    : Number(option.price_per_sf)\n                }\n                clickEvent={setValueHandler}\n                label={option.name}\n                price={option.price ? option.price : option.price_per_sf}\n                type={type}\n                multiple={multiple}\n                perSquareFoot={option.price_per_sf !== undefined}\n                color={type === \"Colors\" ? option.hexcode : null}\n              />\n            );\n          })}\n        </Container>\n      );\n    }\n  }\n\n  return getContent(type);\n};\n\nexport default SelectionComponentContainer;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n * @author ScieCode / http://github.com/sciecode\n */\nimport { EventDispatcher, MOUSE, Quaternion, Spherical, TOUCH, Vector2, Vector3 } from \"three\"; // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar OrbitControls = function (object, domElement) {\n  this.object = object;\n  this.domElement = domElement !== undefined ? domElement : document; // Set to false to disable this control\n\n  this.enabled = true; // \"target\" sets the location of focus, where the object orbits around\n\n  this.target = new Vector3(); // How far you can dolly in and out ( PerspectiveCamera only )\n\n  this.minDistance = 0;\n  this.maxDistance = Infinity; // How far you can zoom in and out ( OrthographicCamera only )\n\n  this.minZoom = 0;\n  this.maxZoom = Infinity; // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n\n  this.minPolarAngle = 0; // radians\n\n  this.maxPolarAngle = Math.PI; // radians\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\n  this.minAzimuthAngle = -Infinity; // radians\n\n  this.maxAzimuthAngle = Infinity; // radians\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n\n  this.enableDamping = false;\n  this.dampingFactor = 0.05; // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n\n  this.enableZoom = true;\n  this.zoomSpeed = 1.0; // Set to false to disable rotating\n\n  this.enableRotate = true;\n  this.rotateSpeed = 1.0; // Set to false to disable panning\n\n  this.enablePan = true;\n  this.panSpeed = 1.0;\n  this.screenSpacePanning = false; // if true, pan in screen-space\n\n  this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n\n  this.autoRotate = false;\n  this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n  // Set to false to disable use of the keys\n\n  this.enableKeys = true; // The four arrow keys\n\n  this.keys = {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    BOTTOM: 40\n  }; // Mouse buttons\n\n  this.mouseButtons = {\n    LEFT: MOUSE.ROTATE,\n    MIDDLE: MOUSE.DOLLY,\n    RIGHT: MOUSE.PAN\n  }; // Touch fingers\n\n  this.touches = {\n    ONE: TOUCH.ROTATE,\n    TWO: TOUCH.DOLLY_PAN\n  }; // for reset\n\n  this.target0 = this.target.clone();\n  this.position0 = this.object.position.clone();\n  this.zoom0 = this.object.zoom; //\n  // public methods\n  //\n\n  this.getPolarAngle = function () {\n    return spherical.phi;\n  };\n\n  this.getAzimuthalAngle = function () {\n    return spherical.theta;\n  };\n\n  this.saveState = function () {\n    scope.target0.copy(scope.target);\n    scope.position0.copy(scope.object.position);\n    scope.zoom0 = scope.object.zoom;\n  };\n\n  this.reset = function () {\n    scope.target.copy(scope.target0);\n    scope.object.position.copy(scope.position0);\n    scope.object.zoom = scope.zoom0;\n    scope.object.updateProjectionMatrix();\n    scope.dispatchEvent(changeEvent);\n    scope.update();\n    state = STATE.NONE;\n  }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n  this.update = function () {\n    var offset = new Vector3(); // so camera.up is the orbit axis\n\n    var quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n    var quatInverse = quat.clone().inverse();\n    var lastPosition = new Vector3();\n    var lastQuaternion = new Quaternion();\n    return function update() {\n      var position = scope.object.position;\n      offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n      offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n      spherical.setFromVector3(offset);\n\n      if (scope.autoRotate && state === STATE.NONE) {\n        rotateLeft(getAutoRotationAngle());\n      }\n\n      if (scope.enableDamping) {\n        spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n        spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n      } else {\n        spherical.theta += sphericalDelta.theta;\n        spherical.phi += sphericalDelta.phi;\n      } // restrict theta to be between desired limits\n\n\n      spherical.theta = Math.max(scope.minAzimuthAngle, Math.min(scope.maxAzimuthAngle, spherical.theta)); // restrict phi to be between desired limits\n\n      spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n      spherical.makeSafe();\n      spherical.radius *= scale; // restrict radius to be between desired limits\n\n      spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n      if (scope.enableDamping === true) {\n        scope.target.addScaledVector(panOffset, scope.dampingFactor);\n      } else {\n        scope.target.add(panOffset);\n      }\n\n      offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n      offset.applyQuaternion(quatInverse);\n      position.copy(scope.target).add(offset);\n      scope.object.lookAt(scope.target);\n\n      if (scope.enableDamping === true) {\n        sphericalDelta.theta *= 1 - scope.dampingFactor;\n        sphericalDelta.phi *= 1 - scope.dampingFactor;\n        panOffset.multiplyScalar(1 - scope.dampingFactor);\n      } else {\n        sphericalDelta.set(0, 0, 0);\n        panOffset.set(0, 0, 0);\n      }\n\n      scale = 1; // update condition is:\n      // min(camera displacement, camera rotation in radians)^2 > EPS\n      // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n      if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n        scope.dispatchEvent(changeEvent);\n        lastPosition.copy(scope.object.position);\n        lastQuaternion.copy(scope.object.quaternion);\n        zoomChanged = false;\n        return true;\n      }\n\n      return false;\n    };\n  }();\n\n  this.dispose = function () {\n    scope.domElement.removeEventListener(\"contextmenu\", onContextMenu, false);\n    scope.domElement.removeEventListener(\"mousedown\", onMouseDown, false);\n    scope.domElement.removeEventListener(\"wheel\", onMouseWheel, false);\n    scope.domElement.removeEventListener(\"touchstart\", onTouchStart, false);\n    scope.domElement.removeEventListener(\"touchend\", onTouchEnd, false);\n    scope.domElement.removeEventListener(\"touchmove\", onTouchMove, false);\n    document.removeEventListener(\"mousemove\", onMouseMove, false);\n    document.removeEventListener(\"mouseup\", onMouseUp, false);\n    window.removeEventListener(\"keydown\", onKeyDown, false); //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n  }; //\n  // internals\n  //\n\n\n  var scope = this;\n  var changeEvent = {\n    type: \"change\"\n  };\n  var startEvent = {\n    type: \"start\"\n  };\n  var endEvent = {\n    type: \"end\"\n  };\n  var STATE = {\n    NONE: -1,\n    ROTATE: 0,\n    DOLLY: 1,\n    PAN: 2,\n    TOUCH_ROTATE: 3,\n    TOUCH_PAN: 4,\n    TOUCH_DOLLY_PAN: 5,\n    TOUCH_DOLLY_ROTATE: 6\n  };\n  var state = STATE.NONE;\n  var EPS = 0.000001; // current position in spherical coordinates\n\n  var spherical = new Spherical();\n  var sphericalDelta = new Spherical();\n  var scale = 1;\n  var panOffset = new Vector3();\n  var zoomChanged = false;\n  var rotateStart = new Vector2();\n  var rotateEnd = new Vector2();\n  var rotateDelta = new Vector2();\n  var panStart = new Vector2();\n  var panEnd = new Vector2();\n  var panDelta = new Vector2();\n  var dollyStart = new Vector2();\n  var dollyEnd = new Vector2();\n  var dollyDelta = new Vector2();\n\n  function getAutoRotationAngle() {\n    return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n  }\n\n  function getZoomScale() {\n    return Math.pow(0.95, scope.zoomSpeed);\n  }\n\n  function rotateLeft(angle) {\n    sphericalDelta.theta -= angle;\n  }\n\n  function rotateUp(angle) {\n    sphericalDelta.phi -= angle;\n  }\n\n  this.rotate = function (degrees) {\n    rotateLeft(degrees);\n    this.update();\n  };\n\n  var panLeft = function () {\n    var v = new Vector3();\n    return function panLeft(distance, objectMatrix) {\n      v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n      v.multiplyScalar(-distance);\n      panOffset.add(v);\n    };\n  }();\n\n  var panUp = function () {\n    var v = new Vector3();\n    return function panUp(distance, objectMatrix) {\n      if (scope.screenSpacePanning === true) {\n        v.setFromMatrixColumn(objectMatrix, 1);\n      } else {\n        v.setFromMatrixColumn(objectMatrix, 0);\n        v.crossVectors(scope.object.up, v);\n      }\n\n      v.multiplyScalar(distance);\n      panOffset.add(v);\n    };\n  }(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n  var pan = function () {\n    var offset = new Vector3();\n    return function pan(deltaX, deltaY) {\n      var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n      if (scope.object.isPerspectiveCamera) {\n        // perspective\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target);\n        var targetDistance = offset.length(); // half of the fov is center to top of screen\n\n        targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n        panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n        panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n      } else if (scope.object.isOrthographicCamera) {\n        // orthographic\n        panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n        panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n      } else {\n        // camera neither orthographic nor perspective\n        console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\");\n        scope.enablePan = false;\n      }\n    };\n  }();\n\n  function dollyIn(dollyScale) {\n    if (scope.object.isPerspectiveCamera) {\n      scale /= dollyScale;\n    } else if (scope.object.isOrthographicCamera) {\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n      console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\");\n      scope.enableZoom = false;\n    }\n  }\n\n  function dollyOut(dollyScale) {\n    if (scope.object.isPerspectiveCamera) {\n      scale *= dollyScale;\n    } else if (scope.object.isOrthographicCamera) {\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n      console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\");\n      scope.enableZoom = false;\n    }\n  } //\n  // event callbacks - update the object state\n  //\n\n\n  function handleMouseDownRotate(event) {\n    rotateStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseDownDolly(event) {\n    dollyStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseDownPan(event) {\n    panStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseMoveRotate(event) {\n    rotateEnd.set(event.clientX, event.clientY);\n    rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n    var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n    rotateStart.copy(rotateEnd);\n    scope.update();\n  }\n\n  function handleMouseMoveDolly(event) {\n    dollyEnd.set(event.clientX, event.clientY);\n    dollyDelta.subVectors(dollyEnd, dollyStart);\n\n    if (dollyDelta.y > 0) {\n      dollyIn(getZoomScale());\n    } else if (dollyDelta.y < 0) {\n      dollyOut(getZoomScale());\n    }\n\n    dollyStart.copy(dollyEnd);\n    scope.update();\n  }\n\n  function handleMouseMovePan(event) {\n    panEnd.set(event.clientX, event.clientY);\n    panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n    pan(panDelta.x, panDelta.y);\n    panStart.copy(panEnd);\n    scope.update();\n  }\n\n  function handleMouseUp()\n  /*event*/\n  {// no-op\n  }\n\n  function handleMouseWheel(event) {\n    if (event.deltaY < 0) {\n      dollyOut(getZoomScale());\n    } else if (event.deltaY > 0) {\n      dollyIn(getZoomScale());\n    }\n\n    scope.update();\n  }\n\n  function handleKeyDown(event) {\n    var needsUpdate = false;\n\n    switch (event.keyCode) {\n      case scope.keys.UP:\n        pan(0, scope.keyPanSpeed);\n        needsUpdate = true;\n        break;\n\n      case scope.keys.BOTTOM:\n        pan(0, -scope.keyPanSpeed);\n        needsUpdate = true;\n        break;\n\n      case scope.keys.LEFT:\n        pan(scope.keyPanSpeed, 0);\n        needsUpdate = true;\n        break;\n\n      case scope.keys.RIGHT:\n        pan(-scope.keyPanSpeed, 0);\n        needsUpdate = true;\n        break;\n    }\n\n    if (needsUpdate) {\n      // prevent the browser from scrolling on cursor keys\n      event.preventDefault();\n      scope.update();\n    }\n  }\n\n  function handleTouchStartRotate(event) {\n    if (event.touches.length == 1) {\n      rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      rotateStart.set(x, y);\n    }\n  }\n\n  function handleTouchStartPan(event) {\n    if (event.touches.length == 1) {\n      panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      panStart.set(x, y);\n    }\n  }\n\n  function handleTouchStartDolly(event) {\n    var dx = event.touches[0].pageX - event.touches[1].pageX;\n    var dy = event.touches[0].pageY - event.touches[1].pageY;\n    var distance = Math.sqrt(dx * dx + dy * dy);\n    dollyStart.set(0, distance);\n  }\n\n  function handleTouchStartDollyPan(event) {\n    if (scope.enableZoom) handleTouchStartDolly(event);\n    if (scope.enablePan) handleTouchStartPan(event);\n  }\n\n  function handleTouchStartDollyRotate(event) {\n    if (scope.enableZoom) handleTouchStartDolly(event);\n    if (scope.enableRotate) handleTouchStartRotate(event);\n  }\n\n  function handleTouchMoveRotate(event) {\n    if (event.touches.length == 1) {\n      rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      rotateEnd.set(x, y);\n    }\n\n    rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n    var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n    rotateStart.copy(rotateEnd);\n  }\n\n  function handleTouchMovePan(event) {\n    if (event.touches.length == 1) {\n      panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n      panEnd.set(x, y);\n    }\n\n    panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n    pan(panDelta.x, panDelta.y);\n    panStart.copy(panEnd);\n  }\n\n  function handleTouchMoveDolly(event) {\n    var dx = event.touches[0].pageX - event.touches[1].pageX;\n    var dy = event.touches[0].pageY - event.touches[1].pageY;\n    var distance = Math.sqrt(dx * dx + dy * dy);\n    dollyEnd.set(0, distance);\n    dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n    dollyIn(dollyDelta.y);\n    dollyStart.copy(dollyEnd);\n  }\n\n  function handleTouchMoveDollyPan(event) {\n    if (scope.enableZoom) handleTouchMoveDolly(event);\n    if (scope.enablePan) handleTouchMovePan(event);\n  }\n\n  function handleTouchMoveDollyRotate(event) {\n    if (scope.enableZoom) handleTouchMoveDolly(event);\n    if (scope.enableRotate) handleTouchMoveRotate(event);\n  }\n\n  function handleTouchEnd()\n  /*event*/\n  {} // no-op\n  //\n  // event handlers - FSM: listen for events and reset state\n  //\n\n\n  function onMouseDown(event) {\n    if (scope.enabled === false) return; // Prevent the browser from scrolling.\n\n    event.preventDefault(); // Manually set the focus since calling preventDefault above\n    // prevents the browser from setting it automatically.\n\n    scope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n    switch (event.button) {\n      case 0:\n        switch (scope.mouseButtons.LEFT) {\n          case MOUSE.ROTATE:\n            if (event.ctrlKey || event.metaKey || event.shiftKey) {\n              if (scope.enablePan === false) return;\n              handleMouseDownPan(event);\n              state = STATE.PAN;\n            } else {\n              if (scope.enableRotate === false) return;\n              handleMouseDownRotate(event);\n              state = STATE.ROTATE;\n            }\n\n            break;\n\n          case MOUSE.PAN:\n            if (event.ctrlKey || event.metaKey || event.shiftKey) {\n              if (scope.enableRotate === false) return;\n              handleMouseDownRotate(event);\n              state = STATE.ROTATE;\n            } else {\n              if (scope.enablePan === false) return;\n              handleMouseDownPan(event);\n              state = STATE.PAN;\n            }\n\n            break;\n\n          default:\n            state = STATE.NONE;\n        }\n\n        break;\n\n      case 1:\n        switch (scope.mouseButtons.MIDDLE) {\n          case MOUSE.DOLLY:\n            if (scope.enableZoom === false) return;\n            handleMouseDownDolly(event);\n            state = STATE.DOLLY;\n            break;\n\n          default:\n            state = STATE.NONE;\n        }\n\n        break;\n\n      case 2:\n        switch (scope.mouseButtons.RIGHT) {\n          case MOUSE.ROTATE:\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n            break;\n\n          case MOUSE.PAN:\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n            break;\n\n          default:\n            state = STATE.NONE;\n        }\n\n        break;\n    }\n\n    if (state !== STATE.NONE) {\n      document.addEventListener(\"mousemove\", onMouseMove, false);\n      document.addEventListener(\"mouseup\", onMouseUp, false);\n      scope.dispatchEvent(startEvent);\n    }\n  }\n\n  function onMouseMove(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n\n    switch (state) {\n      case STATE.ROTATE:\n        if (scope.enableRotate === false) return;\n        handleMouseMoveRotate(event);\n        break;\n\n      case STATE.DOLLY:\n        if (scope.enableZoom === false) return;\n        handleMouseMoveDolly(event);\n        break;\n\n      case STATE.PAN:\n        if (scope.enablePan === false) return;\n        handleMouseMovePan(event);\n        break;\n    }\n  }\n\n  function onMouseUp(event) {\n    if (scope.enabled === false) return;\n    handleMouseUp(event);\n    document.removeEventListener(\"mousemove\", onMouseMove, false);\n    document.removeEventListener(\"mouseup\", onMouseUp, false);\n    scope.dispatchEvent(endEvent);\n    state = STATE.NONE;\n  }\n\n  function onMouseWheel(event) {\n    if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) return;\n    event.preventDefault();\n    event.stopPropagation();\n    scope.dispatchEvent(startEvent);\n    handleMouseWheel(event);\n    scope.dispatchEvent(endEvent);\n  }\n\n  function onKeyDown(event) {\n    if (scope.enabled === false || scope.enableKeys === false || scope.enablePan === false) return;\n    handleKeyDown(event);\n  }\n\n  function onTouchStart(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n\n    switch (event.touches.length) {\n      case 1:\n        switch (scope.touches.ONE) {\n          case TOUCH.ROTATE:\n            if (scope.enableRotate === false) return;\n            handleTouchStartRotate(event);\n            state = STATE.TOUCH_ROTATE;\n            break;\n\n          case TOUCH.PAN:\n            if (scope.enablePan === false) return;\n            handleTouchStartPan(event);\n            state = STATE.TOUCH_PAN;\n            break;\n\n          default:\n            state = STATE.NONE;\n        }\n\n        break;\n\n      case 2:\n        switch (scope.touches.TWO) {\n          case TOUCH.DOLLY_PAN:\n            if (scope.enableZoom === false && scope.enablePan === false) return;\n            handleTouchStartDollyPan(event);\n            state = STATE.TOUCH_DOLLY_PAN;\n            break;\n\n          case TOUCH.DOLLY_ROTATE:\n            if (scope.enableZoom === false && scope.enableRotate === false) return;\n            handleTouchStartDollyRotate(event);\n            state = STATE.TOUCH_DOLLY_ROTATE;\n            break;\n\n          default:\n            state = STATE.NONE;\n        }\n\n        break;\n\n      default:\n        state = STATE.NONE;\n    }\n\n    if (state !== STATE.NONE) {\n      scope.dispatchEvent(startEvent);\n    }\n  }\n\n  function onTouchMove(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n    event.stopPropagation();\n\n    switch (state) {\n      case STATE.TOUCH_ROTATE:\n        if (scope.enableRotate === false) return;\n        handleTouchMoveRotate(event);\n        scope.update();\n        break;\n\n      case STATE.TOUCH_PAN:\n        if (scope.enablePan === false) return;\n        handleTouchMovePan(event);\n        scope.update();\n        break;\n\n      case STATE.TOUCH_DOLLY_PAN:\n        if (scope.enableZoom === false && scope.enablePan === false) return;\n        handleTouchMoveDollyPan(event);\n        scope.update();\n        break;\n\n      case STATE.TOUCH_DOLLY_ROTATE:\n        if (scope.enableZoom === false && scope.enableRotate === false) return;\n        handleTouchMoveDollyRotate(event);\n        scope.update();\n        break;\n\n      default:\n        state = STATE.NONE;\n    }\n  }\n\n  function onTouchEnd(event) {\n    if (scope.enabled === false) return;\n    handleTouchEnd(event);\n    scope.dispatchEvent(endEvent);\n    state = STATE.NONE;\n  }\n\n  function onContextMenu(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n  } //\n\n\n  scope.domElement.addEventListener(\"contextmenu\", onContextMenu, false);\n  scope.domElement.addEventListener(\"mousedown\", onMouseDown, false);\n  scope.domElement.addEventListener(\"wheel\", onMouseWheel, {\n    passive: false\n  });\n  scope.domElement.addEventListener(\"touchstart\", onTouchStart, false);\n  scope.domElement.addEventListener(\"touchend\", onTouchEnd, false);\n  scope.domElement.addEventListener(\"touchmove\", onTouchMove, false);\n  window.addEventListener(\"keydown\", onKeyDown, false); // force an update at start\n\n  this.update();\n};\n\nOrbitControls.prototype = Object.create(EventDispatcher.prototype);\nOrbitControls.prototype.constructor = OrbitControls; // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nvar MapControls = function (object, domElement) {\n  OrbitControls.call(this, object, domElement);\n  this.mouseButtons.LEFT = MOUSE.PAN;\n  this.mouseButtons.RIGHT = MOUSE.ROTATE;\n  this.touches.ONE = TOUCH.PAN;\n  this.touches.TWO = TOUCH.DOLLY_ROTATE;\n};\n\nMapControls.prototype = Object.create(EventDispatcher.prototype);\nMapControls.prototype.constructor = MapControls;\nexport { OrbitControls, MapControls };","map":{"version":3,"sources":["C:/Users/Ryan/Desktop/Clients/shed-configurator/shed_v4/src/components/Display/OrbitControls.js"],"names":["EventDispatcher","MOUSE","Quaternion","Spherical","TOUCH","Vector2","Vector3","OrbitControls","object","domElement","undefined","document","enabled","target","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","offset","quat","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","rotateLeft","getAutoRotationAngle","sphericalDelta","max","min","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","window","onKeyDown","type","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","rotate","degrees","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","body","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","console","warn","dollyIn","dollyScale","dollyOut","handleMouseDownRotate","event","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","x","y","handleMouseMoveDolly","handleMouseMovePan","handleMouseUp","handleMouseWheel","handleKeyDown","needsUpdate","keyCode","preventDefault","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","handleTouchEnd","focus","button","ctrlKey","metaKey","shiftKey","addEventListener","stopPropagation","DOLLY_ROTATE","passive","prototype","Object","create","constructor","MapControls","call"],"mappings":"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","sourcesContent":["/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n * @author ScieCode / http://github.com/sciecode\n */\n\nimport {\n  EventDispatcher,\n  MOUSE,\n  Quaternion,\n  Spherical,\n  TOUCH,\n  Vector2,\n  Vector3,\n} from \"three\";\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar OrbitControls = function (object, domElement) {\n  this.object = object;\n\n  this.domElement = domElement !== undefined ? domElement : document;\n\n  // Set to false to disable this control\n  this.enabled = true;\n\n  // \"target\" sets the location of focus, where the object orbits around\n  this.target = new Vector3();\n\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  this.minDistance = 0;\n  this.maxDistance = Infinity;\n\n  // How far you can zoom in and out ( OrthographicCamera only )\n  this.minZoom = 0;\n  this.maxZoom = Infinity;\n\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  this.minPolarAngle = 0; // radians\n  this.maxPolarAngle = Math.PI; // radians\n\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n  this.minAzimuthAngle = -Infinity; // radians\n  this.maxAzimuthAngle = Infinity; // radians\n\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  this.enableDamping = false;\n  this.dampingFactor = 0.05;\n\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  this.enableZoom = true;\n  this.zoomSpeed = 1.0;\n\n  // Set to false to disable rotating\n  this.enableRotate = true;\n  this.rotateSpeed = 1.0;\n\n  // Set to false to disable panning\n  this.enablePan = true;\n  this.panSpeed = 1.0;\n  this.screenSpacePanning = false; // if true, pan in screen-space\n  this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n  this.autoRotate = false;\n  this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n  // Set to false to disable use of the keys\n  this.enableKeys = true;\n\n  // The four arrow keys\n  this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n  // Mouse buttons\n  this.mouseButtons = {\n    LEFT: MOUSE.ROTATE,\n    MIDDLE: MOUSE.DOLLY,\n    RIGHT: MOUSE.PAN,\n  };\n\n  // Touch fingers\n  this.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n  // for reset\n  this.target0 = this.target.clone();\n  this.position0 = this.object.position.clone();\n  this.zoom0 = this.object.zoom;\n\n  //\n  // public methods\n  //\n\n  this.getPolarAngle = function () {\n    return spherical.phi;\n  };\n\n  this.getAzimuthalAngle = function () {\n    return spherical.theta;\n  };\n\n  this.saveState = function () {\n    scope.target0.copy(scope.target);\n    scope.position0.copy(scope.object.position);\n    scope.zoom0 = scope.object.zoom;\n  };\n\n  this.reset = function () {\n    scope.target.copy(scope.target0);\n    scope.object.position.copy(scope.position0);\n    scope.object.zoom = scope.zoom0;\n\n    scope.object.updateProjectionMatrix();\n    scope.dispatchEvent(changeEvent);\n\n    scope.update();\n\n    state = STATE.NONE;\n  };\n\n  // this method is exposed, but perhaps it would be better if we can make it private...\n  this.update = (function () {\n    var offset = new Vector3();\n\n    // so camera.up is the orbit axis\n    var quat = new Quaternion().setFromUnitVectors(\n      object.up,\n      new Vector3(0, 1, 0)\n    );\n    var quatInverse = quat.clone().inverse();\n\n    var lastPosition = new Vector3();\n    var lastQuaternion = new Quaternion();\n\n    return function update() {\n      var position = scope.object.position;\n\n      offset.copy(position).sub(scope.target);\n\n      // rotate offset to \"y-axis-is-up\" space\n      offset.applyQuaternion(quat);\n\n      // angle from z-axis around y-axis\n      spherical.setFromVector3(offset);\n\n      if (scope.autoRotate && state === STATE.NONE) {\n        rotateLeft(getAutoRotationAngle());\n      }\n\n      if (scope.enableDamping) {\n        spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n        spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n      } else {\n        spherical.theta += sphericalDelta.theta;\n        spherical.phi += sphericalDelta.phi;\n      }\n\n      // restrict theta to be between desired limits\n      spherical.theta = Math.max(\n        scope.minAzimuthAngle,\n        Math.min(scope.maxAzimuthAngle, spherical.theta)\n      );\n\n      // restrict phi to be between desired limits\n      spherical.phi = Math.max(\n        scope.minPolarAngle,\n        Math.min(scope.maxPolarAngle, spherical.phi)\n      );\n\n      spherical.makeSafe();\n\n      spherical.radius *= scale;\n\n      // restrict radius to be between desired limits\n      spherical.radius = Math.max(\n        scope.minDistance,\n        Math.min(scope.maxDistance, spherical.radius)\n      );\n\n      // move target to panned location\n\n      if (scope.enableDamping === true) {\n        scope.target.addScaledVector(panOffset, scope.dampingFactor);\n      } else {\n        scope.target.add(panOffset);\n      }\n\n      offset.setFromSpherical(spherical);\n\n      // rotate offset back to \"camera-up-vector-is-up\" space\n      offset.applyQuaternion(quatInverse);\n\n      position.copy(scope.target).add(offset);\n\n      scope.object.lookAt(scope.target);\n\n      if (scope.enableDamping === true) {\n        sphericalDelta.theta *= 1 - scope.dampingFactor;\n        sphericalDelta.phi *= 1 - scope.dampingFactor;\n\n        panOffset.multiplyScalar(1 - scope.dampingFactor);\n      } else {\n        sphericalDelta.set(0, 0, 0);\n\n        panOffset.set(0, 0, 0);\n      }\n\n      scale = 1;\n\n      // update condition is:\n      // min(camera displacement, camera rotation in radians)^2 > EPS\n      // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n      if (\n        zoomChanged ||\n        lastPosition.distanceToSquared(scope.object.position) > EPS ||\n        8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n      ) {\n        scope.dispatchEvent(changeEvent);\n\n        lastPosition.copy(scope.object.position);\n        lastQuaternion.copy(scope.object.quaternion);\n        zoomChanged = false;\n\n        return true;\n      }\n\n      return false;\n    };\n  })();\n\n  this.dispose = function () {\n    scope.domElement.removeEventListener(\"contextmenu\", onContextMenu, false);\n    scope.domElement.removeEventListener(\"mousedown\", onMouseDown, false);\n    scope.domElement.removeEventListener(\"wheel\", onMouseWheel, false);\n\n    scope.domElement.removeEventListener(\"touchstart\", onTouchStart, false);\n    scope.domElement.removeEventListener(\"touchend\", onTouchEnd, false);\n    scope.domElement.removeEventListener(\"touchmove\", onTouchMove, false);\n\n    document.removeEventListener(\"mousemove\", onMouseMove, false);\n    document.removeEventListener(\"mouseup\", onMouseUp, false);\n\n    window.removeEventListener(\"keydown\", onKeyDown, false);\n\n    //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n  };\n\n  //\n  // internals\n  //\n\n  var scope = this;\n\n  var changeEvent = { type: \"change\" };\n  var startEvent = { type: \"start\" };\n  var endEvent = { type: \"end\" };\n\n  var STATE = {\n    NONE: -1,\n    ROTATE: 0,\n    DOLLY: 1,\n    PAN: 2,\n    TOUCH_ROTATE: 3,\n    TOUCH_PAN: 4,\n    TOUCH_DOLLY_PAN: 5,\n    TOUCH_DOLLY_ROTATE: 6,\n  };\n\n  var state = STATE.NONE;\n\n  var EPS = 0.000001;\n\n  // current position in spherical coordinates\n  var spherical = new Spherical();\n  var sphericalDelta = new Spherical();\n\n  var scale = 1;\n  var panOffset = new Vector3();\n  var zoomChanged = false;\n\n  var rotateStart = new Vector2();\n  var rotateEnd = new Vector2();\n  var rotateDelta = new Vector2();\n\n  var panStart = new Vector2();\n  var panEnd = new Vector2();\n  var panDelta = new Vector2();\n\n  var dollyStart = new Vector2();\n  var dollyEnd = new Vector2();\n  var dollyDelta = new Vector2();\n\n  function getAutoRotationAngle() {\n    return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed;\n  }\n\n  function getZoomScale() {\n    return Math.pow(0.95, scope.zoomSpeed);\n  }\n\n  function rotateLeft(angle) {\n    sphericalDelta.theta -= angle;\n  }\n\n  function rotateUp(angle) {\n    sphericalDelta.phi -= angle;\n  }\n\n  this.rotate = function (degrees) {\n    rotateLeft(degrees);\n    this.update();\n  };\n\n  var panLeft = (function () {\n    var v = new Vector3();\n\n    return function panLeft(distance, objectMatrix) {\n      v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n      v.multiplyScalar(-distance);\n\n      panOffset.add(v);\n    };\n  })();\n\n  var panUp = (function () {\n    var v = new Vector3();\n\n    return function panUp(distance, objectMatrix) {\n      if (scope.screenSpacePanning === true) {\n        v.setFromMatrixColumn(objectMatrix, 1);\n      } else {\n        v.setFromMatrixColumn(objectMatrix, 0);\n        v.crossVectors(scope.object.up, v);\n      }\n\n      v.multiplyScalar(distance);\n\n      panOffset.add(v);\n    };\n  })();\n\n  // deltaX and deltaY are in pixels; right and down are positive\n  var pan = (function () {\n    var offset = new Vector3();\n\n    return function pan(deltaX, deltaY) {\n      var element =\n        scope.domElement === document\n          ? scope.domElement.body\n          : scope.domElement;\n\n      if (scope.object.isPerspectiveCamera) {\n        // perspective\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target);\n        var targetDistance = offset.length();\n\n        // half of the fov is center to top of screen\n        targetDistance *= Math.tan(((scope.object.fov / 2) * Math.PI) / 180.0);\n\n        // we use only clientHeight here so aspect ratio does not distort speed\n        panLeft(\n          (2 * deltaX * targetDistance) / element.clientHeight,\n          scope.object.matrix\n        );\n        panUp(\n          (2 * deltaY * targetDistance) / element.clientHeight,\n          scope.object.matrix\n        );\n      } else if (scope.object.isOrthographicCamera) {\n        // orthographic\n        panLeft(\n          (deltaX * (scope.object.right - scope.object.left)) /\n            scope.object.zoom /\n            element.clientWidth,\n          scope.object.matrix\n        );\n        panUp(\n          (deltaY * (scope.object.top - scope.object.bottom)) /\n            scope.object.zoom /\n            element.clientHeight,\n          scope.object.matrix\n        );\n      } else {\n        // camera neither orthographic nor perspective\n        console.warn(\n          \"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\"\n        );\n        scope.enablePan = false;\n      }\n    };\n  })();\n\n  function dollyIn(dollyScale) {\n    if (scope.object.isPerspectiveCamera) {\n      scale /= dollyScale;\n    } else if (scope.object.isOrthographicCamera) {\n      scope.object.zoom = Math.max(\n        scope.minZoom,\n        Math.min(scope.maxZoom, scope.object.zoom * dollyScale)\n      );\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n      console.warn(\n        \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n      );\n      scope.enableZoom = false;\n    }\n  }\n\n  function dollyOut(dollyScale) {\n    if (scope.object.isPerspectiveCamera) {\n      scale *= dollyScale;\n    } else if (scope.object.isOrthographicCamera) {\n      scope.object.zoom = Math.max(\n        scope.minZoom,\n        Math.min(scope.maxZoom, scope.object.zoom / dollyScale)\n      );\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n      console.warn(\n        \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n      );\n      scope.enableZoom = false;\n    }\n  }\n\n  //\n  // event callbacks - update the object state\n  //\n\n  function handleMouseDownRotate(event) {\n    rotateStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseDownDolly(event) {\n    dollyStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseDownPan(event) {\n    panStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseMoveRotate(event) {\n    rotateEnd.set(event.clientX, event.clientY);\n\n    rotateDelta\n      .subVectors(rotateEnd, rotateStart)\n      .multiplyScalar(scope.rotateSpeed);\n\n    var element =\n      scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n    rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight); // yes, height\n\n    rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight);\n\n    rotateStart.copy(rotateEnd);\n\n    scope.update();\n  }\n\n  function handleMouseMoveDolly(event) {\n    dollyEnd.set(event.clientX, event.clientY);\n\n    dollyDelta.subVectors(dollyEnd, dollyStart);\n\n    if (dollyDelta.y > 0) {\n      dollyIn(getZoomScale());\n    } else if (dollyDelta.y < 0) {\n      dollyOut(getZoomScale());\n    }\n\n    dollyStart.copy(dollyEnd);\n\n    scope.update();\n  }\n\n  function handleMouseMovePan(event) {\n    panEnd.set(event.clientX, event.clientY);\n\n    panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n\n    pan(panDelta.x, panDelta.y);\n\n    panStart.copy(panEnd);\n\n    scope.update();\n  }\n\n  function handleMouseUp(/*event*/) {\n    // no-op\n  }\n\n  function handleMouseWheel(event) {\n    if (event.deltaY < 0) {\n      dollyOut(getZoomScale());\n    } else if (event.deltaY > 0) {\n      dollyIn(getZoomScale());\n    }\n\n    scope.update();\n  }\n\n  function handleKeyDown(event) {\n    var needsUpdate = false;\n\n    switch (event.keyCode) {\n      case scope.keys.UP:\n        pan(0, scope.keyPanSpeed);\n        needsUpdate = true;\n        break;\n\n      case scope.keys.BOTTOM:\n        pan(0, -scope.keyPanSpeed);\n        needsUpdate = true;\n        break;\n\n      case scope.keys.LEFT:\n        pan(scope.keyPanSpeed, 0);\n        needsUpdate = true;\n        break;\n\n      case scope.keys.RIGHT:\n        pan(-scope.keyPanSpeed, 0);\n        needsUpdate = true;\n        break;\n    }\n\n    if (needsUpdate) {\n      // prevent the browser from scrolling on cursor keys\n      event.preventDefault();\n\n      scope.update();\n    }\n  }\n\n  function handleTouchStartRotate(event) {\n    if (event.touches.length == 1) {\n      rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n\n      rotateStart.set(x, y);\n    }\n  }\n\n  function handleTouchStartPan(event) {\n    if (event.touches.length == 1) {\n      panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n\n      panStart.set(x, y);\n    }\n  }\n\n  function handleTouchStartDolly(event) {\n    var dx = event.touches[0].pageX - event.touches[1].pageX;\n    var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    dollyStart.set(0, distance);\n  }\n\n  function handleTouchStartDollyPan(event) {\n    if (scope.enableZoom) handleTouchStartDolly(event);\n\n    if (scope.enablePan) handleTouchStartPan(event);\n  }\n\n  function handleTouchStartDollyRotate(event) {\n    if (scope.enableZoom) handleTouchStartDolly(event);\n\n    if (scope.enableRotate) handleTouchStartRotate(event);\n  }\n\n  function handleTouchMoveRotate(event) {\n    if (event.touches.length == 1) {\n      rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n\n      rotateEnd.set(x, y);\n    }\n\n    rotateDelta\n      .subVectors(rotateEnd, rotateStart)\n      .multiplyScalar(scope.rotateSpeed);\n\n    var element =\n      scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n    rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight); // yes, height\n\n    rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight);\n\n    rotateStart.copy(rotateEnd);\n  }\n\n  function handleTouchMovePan(event) {\n    if (event.touches.length == 1) {\n      panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n    } else {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n\n      panEnd.set(x, y);\n    }\n\n    panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n\n    pan(panDelta.x, panDelta.y);\n\n    panStart.copy(panEnd);\n  }\n\n  function handleTouchMoveDolly(event) {\n    var dx = event.touches[0].pageX - event.touches[1].pageX;\n    var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    dollyEnd.set(0, distance);\n\n    dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n\n    dollyIn(dollyDelta.y);\n\n    dollyStart.copy(dollyEnd);\n  }\n\n  function handleTouchMoveDollyPan(event) {\n    if (scope.enableZoom) handleTouchMoveDolly(event);\n\n    if (scope.enablePan) handleTouchMovePan(event);\n  }\n\n  function handleTouchMoveDollyRotate(event) {\n    if (scope.enableZoom) handleTouchMoveDolly(event);\n\n    if (scope.enableRotate) handleTouchMoveRotate(event);\n  }\n\n  function handleTouchEnd(/*event*/) {\n    // no-op\n  }\n\n  //\n  // event handlers - FSM: listen for events and reset state\n  //\n\n  function onMouseDown(event) {\n    if (scope.enabled === false) return;\n\n    // Prevent the browser from scrolling.\n\n    event.preventDefault();\n\n    // Manually set the focus since calling preventDefault above\n    // prevents the browser from setting it automatically.\n\n    scope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n    switch (event.button) {\n      case 0:\n        switch (scope.mouseButtons.LEFT) {\n          case MOUSE.ROTATE:\n            if (event.ctrlKey || event.metaKey || event.shiftKey) {\n              if (scope.enablePan === false) return;\n\n              handleMouseDownPan(event);\n\n              state = STATE.PAN;\n            } else {\n              if (scope.enableRotate === false) return;\n\n              handleMouseDownRotate(event);\n\n              state = STATE.ROTATE;\n            }\n\n            break;\n\n          case MOUSE.PAN:\n            if (event.ctrlKey || event.metaKey || event.shiftKey) {\n              if (scope.enableRotate === false) return;\n\n              handleMouseDownRotate(event);\n\n              state = STATE.ROTATE;\n            } else {\n              if (scope.enablePan === false) return;\n\n              handleMouseDownPan(event);\n\n              state = STATE.PAN;\n            }\n\n            break;\n\n          default:\n            state = STATE.NONE;\n        }\n\n        break;\n\n      case 1:\n        switch (scope.mouseButtons.MIDDLE) {\n          case MOUSE.DOLLY:\n            if (scope.enableZoom === false) return;\n\n            handleMouseDownDolly(event);\n\n            state = STATE.DOLLY;\n\n            break;\n\n          default:\n            state = STATE.NONE;\n        }\n\n        break;\n\n      case 2:\n        switch (scope.mouseButtons.RIGHT) {\n          case MOUSE.ROTATE:\n            if (scope.enableRotate === false) return;\n\n            handleMouseDownRotate(event);\n\n            state = STATE.ROTATE;\n\n            break;\n\n          case MOUSE.PAN:\n            if (scope.enablePan === false) return;\n\n            handleMouseDownPan(event);\n\n            state = STATE.PAN;\n\n            break;\n\n          default:\n            state = STATE.NONE;\n        }\n\n        break;\n    }\n\n    if (state !== STATE.NONE) {\n      document.addEventListener(\"mousemove\", onMouseMove, false);\n      document.addEventListener(\"mouseup\", onMouseUp, false);\n\n      scope.dispatchEvent(startEvent);\n    }\n  }\n\n  function onMouseMove(event) {\n    if (scope.enabled === false) return;\n\n    event.preventDefault();\n\n    switch (state) {\n      case STATE.ROTATE:\n        if (scope.enableRotate === false) return;\n\n        handleMouseMoveRotate(event);\n\n        break;\n\n      case STATE.DOLLY:\n        if (scope.enableZoom === false) return;\n\n        handleMouseMoveDolly(event);\n\n        break;\n\n      case STATE.PAN:\n        if (scope.enablePan === false) return;\n\n        handleMouseMovePan(event);\n\n        break;\n    }\n  }\n\n  function onMouseUp(event) {\n    if (scope.enabled === false) return;\n\n    handleMouseUp(event);\n\n    document.removeEventListener(\"mousemove\", onMouseMove, false);\n    document.removeEventListener(\"mouseup\", onMouseUp, false);\n\n    scope.dispatchEvent(endEvent);\n\n    state = STATE.NONE;\n  }\n\n  function onMouseWheel(event) {\n    if (\n      scope.enabled === false ||\n      scope.enableZoom === false ||\n      (state !== STATE.NONE && state !== STATE.ROTATE)\n    )\n      return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    scope.dispatchEvent(startEvent);\n\n    handleMouseWheel(event);\n\n    scope.dispatchEvent(endEvent);\n  }\n\n  function onKeyDown(event) {\n    if (\n      scope.enabled === false ||\n      scope.enableKeys === false ||\n      scope.enablePan === false\n    )\n      return;\n\n    handleKeyDown(event);\n  }\n\n  function onTouchStart(event) {\n    if (scope.enabled === false) return;\n\n    event.preventDefault();\n\n    switch (event.touches.length) {\n      case 1:\n        switch (scope.touches.ONE) {\n          case TOUCH.ROTATE:\n            if (scope.enableRotate === false) return;\n\n            handleTouchStartRotate(event);\n\n            state = STATE.TOUCH_ROTATE;\n\n            break;\n\n          case TOUCH.PAN:\n            if (scope.enablePan === false) return;\n\n            handleTouchStartPan(event);\n\n            state = STATE.TOUCH_PAN;\n\n            break;\n\n          default:\n            state = STATE.NONE;\n        }\n\n        break;\n\n      case 2:\n        switch (scope.touches.TWO) {\n          case TOUCH.DOLLY_PAN:\n            if (scope.enableZoom === false && scope.enablePan === false) return;\n\n            handleTouchStartDollyPan(event);\n\n            state = STATE.TOUCH_DOLLY_PAN;\n\n            break;\n\n          case TOUCH.DOLLY_ROTATE:\n            if (scope.enableZoom === false && scope.enableRotate === false)\n              return;\n\n            handleTouchStartDollyRotate(event);\n\n            state = STATE.TOUCH_DOLLY_ROTATE;\n\n            break;\n\n          default:\n            state = STATE.NONE;\n        }\n\n        break;\n\n      default:\n        state = STATE.NONE;\n    }\n\n    if (state !== STATE.NONE) {\n      scope.dispatchEvent(startEvent);\n    }\n  }\n\n  function onTouchMove(event) {\n    if (scope.enabled === false) return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    switch (state) {\n      case STATE.TOUCH_ROTATE:\n        if (scope.enableRotate === false) return;\n\n        handleTouchMoveRotate(event);\n\n        scope.update();\n\n        break;\n\n      case STATE.TOUCH_PAN:\n        if (scope.enablePan === false) return;\n\n        handleTouchMovePan(event);\n\n        scope.update();\n\n        break;\n\n      case STATE.TOUCH_DOLLY_PAN:\n        if (scope.enableZoom === false && scope.enablePan === false) return;\n\n        handleTouchMoveDollyPan(event);\n\n        scope.update();\n\n        break;\n\n      case STATE.TOUCH_DOLLY_ROTATE:\n        if (scope.enableZoom === false && scope.enableRotate === false) return;\n\n        handleTouchMoveDollyRotate(event);\n\n        scope.update();\n\n        break;\n\n      default:\n        state = STATE.NONE;\n    }\n  }\n\n  function onTouchEnd(event) {\n    if (scope.enabled === false) return;\n\n    handleTouchEnd(event);\n\n    scope.dispatchEvent(endEvent);\n\n    state = STATE.NONE;\n  }\n\n  function onContextMenu(event) {\n    if (scope.enabled === false) return;\n\n    event.preventDefault();\n  }\n\n  //\n\n  scope.domElement.addEventListener(\"contextmenu\", onContextMenu, false);\n\n  scope.domElement.addEventListener(\"mousedown\", onMouseDown, false);\n  scope.domElement.addEventListener(\"wheel\", onMouseWheel, { passive: false });\n\n  scope.domElement.addEventListener(\"touchstart\", onTouchStart, false);\n  scope.domElement.addEventListener(\"touchend\", onTouchEnd, false);\n  scope.domElement.addEventListener(\"touchmove\", onTouchMove, false);\n\n  window.addEventListener(\"keydown\", onKeyDown, false);\n\n  // force an update at start\n\n  this.update();\n};\n\nOrbitControls.prototype = Object.create(EventDispatcher.prototype);\nOrbitControls.prototype.constructor = OrbitControls;\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nvar MapControls = function (object, domElement) {\n  OrbitControls.call(this, object, domElement);\n\n  this.mouseButtons.LEFT = MOUSE.PAN;\n  this.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n  this.touches.ONE = TOUCH.PAN;\n  this.touches.TWO = TOUCH.DOLLY_ROTATE;\n};\n\nMapControls.prototype = Object.create(EventDispatcher.prototype);\nMapControls.prototype.constructor = MapControls;\n\nexport { OrbitControls, MapControls };\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\Desktop\\\\Clients\\\\shed-configurator\\\\shed_v4\\\\src\\\\components\\\\DropdownContent\\\\SizeContent\\\\SizeContent.js\";\nimport React, { useState } from \"react\";\nimport SelectionComponent from \"../InnerComponents/SelectionComponent\";\nimport \"../InnerComponents/SelectionComponentContainer.css\";\nimport Container from \"./../../Container/Container\";\nimport { FLOORING_PSF } from \"./../../../utils/_DATA\";\n\nconst SizeContent = ({\n  data,\n  type,\n  clickEvent,\n  multiple,\n  setPriceEvent,\n  updateSizing,\n  size\n}) => {\n  console.log(\"sizecontent data\", data);\n  let scValue;\n\n  const calculateValue = option => {\n    if (type === \"Sizing\") {\n      return option.totalSquareFootage * Number(option.price_per_sf);\n    } else {\n      return option.price ? Number(option.price) : Number(option.price_per_sf);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    classes: \"SelectionComponentContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, data.map(option => {\n    return /*#__PURE__*/React.createElement(SelectionComponent, {\n      key: option.id,\n      value: calculateValue(option),\n      clickEvent: () => clickEvent(option.totalSquareFootage, FLOORING_PSF),\n      label: option.name,\n      price: option.price_per_sf * option.totalSquareFootage,\n      type: type,\n      multiple: multiple,\n      updateSizing: updateSizing,\n      size: option.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nexport default SizeContent;","map":{"version":3,"sources":["C:/Users/Ryan/Desktop/Clients/shed-configurator/shed_v4/src/components/DropdownContent/SizeContent/SizeContent.js"],"names":["React","useState","SelectionComponent","Container","FLOORING_PSF","SizeContent","data","type","clickEvent","multiple","setPriceEvent","updateSizing","size","console","log","scValue","calculateValue","option","totalSquareFootage","Number","price_per_sf","price","map","id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,kBAAP,MAA+B,uCAA/B;AACA,OAAO,oDAAP;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,YAAT,QAA6B,wBAA7B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,IADmB;AAEnBC,EAAAA,IAFmB;AAGnBC,EAAAA,UAHmB;AAInBC,EAAAA,QAJmB;AAKnBC,EAAAA,aALmB;AAMnBC,EAAAA,YANmB;AAOnBC,EAAAA;AAPmB,CAAD,KAQd;AACJC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCR,IAAhC;AACA,MAAIS,OAAJ;;AACA,QAAMC,cAAc,GAAIC,MAAD,IAAY;AACjC,QAAIV,IAAI,KAAK,QAAb,EAAuB;AACrB,aAAOU,MAAM,CAACC,kBAAP,GAA4BC,MAAM,CAACF,MAAM,CAACG,YAAR,CAAzC;AACD,KAFD,MAEO;AACL,aAAOH,MAAM,CAACI,KAAP,GAAeF,MAAM,CAACF,MAAM,CAACI,KAAR,CAArB,GAAsCF,MAAM,CAACF,MAAM,CAACG,YAAR,CAAnD;AACD;AACF,GAND;;AAQA,sBACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,6BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,IAAI,CAACgB,GAAL,CAAUL,MAAD,IAAY;AACpB,wBACE,oBAAC,kBAAD;AACE,MAAA,GAAG,EAAEA,MAAM,CAACM,EADd;AAEE,MAAA,KAAK,EAAEP,cAAc,CAACC,MAAD,CAFvB;AAGE,MAAA,UAAU,EAAE,MACVT,UAAU,CAACS,MAAM,CAACC,kBAAR,EAA4Bd,YAA5B,CAJd;AAME,MAAA,KAAK,EAAEa,MAAM,CAACO,IANhB;AAOE,MAAA,KAAK,EAAEP,MAAM,CAACG,YAAP,GAAsBH,MAAM,CAACC,kBAPtC;AAQE,MAAA,IAAI,EAAEX,IARR;AASE,MAAA,QAAQ,EAAEE,QATZ;AAUE,MAAA,YAAY,EAAEE,YAVhB;AAWE,MAAA,IAAI,EAAEM,MAAM,CAACM,EAXf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAeD,GAhBA,CADH,CADF;AAqBD,CAxCD;;AA0CA,eAAelB,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport SelectionComponent from \"../InnerComponents/SelectionComponent\";\r\nimport \"../InnerComponents/SelectionComponentContainer.css\";\r\nimport Container from \"./../../Container/Container\";\r\nimport { FLOORING_PSF } from \"./../../../utils/_DATA\";\r\n\r\nconst SizeContent = ({\r\n  data,\r\n  type,\r\n  clickEvent,\r\n  multiple,\r\n  setPriceEvent,\r\n  updateSizing,\r\n  size,\r\n}) => {\r\n  console.log(\"sizecontent data\", data);\r\n  let scValue;\r\n  const calculateValue = (option) => {\r\n    if (type === \"Sizing\") {\r\n      return option.totalSquareFootage * Number(option.price_per_sf);\r\n    } else {\r\n      return option.price ? Number(option.price) : Number(option.price_per_sf);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container classes=\"SelectionComponentContainer\">\r\n      {data.map((option) => {\r\n        return (\r\n          <SelectionComponent\r\n            key={option.id}\r\n            value={calculateValue(option)}\r\n            clickEvent={() =>\r\n              clickEvent(option.totalSquareFootage, FLOORING_PSF)\r\n            }\r\n            label={option.name}\r\n            price={option.price_per_sf * option.totalSquareFootage}\r\n            type={type}\r\n            multiple={multiple}\r\n            updateSizing={updateSizing}\r\n            size={option.id}\r\n          />\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SizeContent;\r\n"]},"metadata":{},"sourceType":"module"}
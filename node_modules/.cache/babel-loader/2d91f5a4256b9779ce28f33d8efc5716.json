{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\Desktop\\\\Clients\\\\shed-configurator\\\\shed_v4\\\\src\\\\components\\\\Display\\\\Display.js\";\nimport React, { Component } from \"react\";\nimport \"./Display.css\";\nimport * as THREE from \"three\";\nimport TWEEN from \"@tweenjs/tween.js\";\nimport { OrbitControls } from \"./OrbitControls.js\";\nvar scene = new THREE.Scene();\nvar cameraFront, cameraRight, cameraLeft, cameraBack;\n\nclass Display extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkMeshInConfig = name => {\n      if (this.state.extrasDownloaded) {\n        return this.state.allConfigs[this.state.sizing].includes(name);\n      }\n    };\n\n    this.remount = () => {\n      this.componentWillUnmount();\n      this.componentDidMount();\n    };\n\n    this.initiateScene = () => {\n      var envMap;\n      var currentConfigArray = [];\n      var reflectionResolution;\n      var componentArray = [];\n      var jsonData;\n      var precisionQuality = \"highp\";\n      var reflectionResolution = 1024;\n      var preloader = document.createElement(\"div\");\n      preloader.id = \"loader\";\n      const manager = new THREE.LoadingManager();\n      const manager2 = new THREE.LoadingManager();\n      const loader = new THREE.GLTFLoader(manager);\n      const loader2 = new THREE.GLTFLoader(manager2);\n      const renderer = new THREE.WebGLRenderer({\n        alpha: true,\n        antialias: true\n      });\n      const envLoader = new THREE.RGBELoader(manager);\n      renderer.outputEncoding = THREE.sRGBEncoding;\n      renderer.gammaOutput = true;\n      renderer.gammaInput = true;\n      renderer.gammaFactor = 2.2;\n      renderer.shadowMap.enabled = true;\n      renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n      renderer.shadowMapSoft = true; // renderer.shadowMapBias = 0.0039;\n\n      renderer.shadowMapDarkness = 2;\n      renderer.shadowMapWidth = 1024;\n      renderer.shadowMapHeight = 1024; // renderer.shadowCameraFar = 100;\n      // renderer.shadowCameraFov = 80;\n\n      var reflectiveMat = new THREE.MeshStandardMaterial({\n        color: \"white\",\n        metalness: 1,\n        roughness: 0,\n        precision: precisionQuality\n      });\n\n      manager.onStart = function (url, itemsLoaded, itemsTotal) {// console.log('Started loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.');\n      };\n\n      manager.onLoad = function () {\n        console.log(\"Loading complete!\");\n        setTimeout(init, 100);\n        preloader.style.display = \"none\";\n        loader2.load(\"https://d178re3qvjjhpw.cloudfront.net/shed/Assets/Extras_new3_comp.gltf\", gltf => {\n          gltf.scene.traverse(function (child) {\n            if (child.isMesh) {\n              // console.log(child.name);\n              // child.material = reflectiveMat;\n              child.material.precisionQuality = precisionQuality;\n              child.material.roughness = 0.65;\n              child.material.envMap = envMap;\n              child.material.envMapIntensity = 0.4;\n              child.visible = false;\n              child.castShadow = true;\n              child.receiveShadow = true; // scene.add(child);\n            } else if (child.type === \"Group\") {\n              componentArray.push(child);\n            }\n          });\n          scene.add(gltf.scene);\n        });\n      };\n\n      manager.onProgress = function (item, loaded, total) {\n        var percentageLoad = loaded / total * 100 + \"%\";\n        console.log(percentageLoad);\n        preloader.innerHTML = percentageLoad; // console.log(preloader);\n      };\n\n      this.mount.appendChild(preloader);\n\n      manager.onError = function (url) {\n        console.log(\"There was an error loading \" + url);\n      };\n\n      manager2.onLoad = () => {\n        this.updateExtrasState();\n        var ten = componentArray.filter(x => x.name.split(\"_\")[0] === \"10x8\").map(x => x.name);\n        ten = {\n          ten: ten\n        };\n        var eight = componentArray.filter(x => x.name.split(\"_\")[0] === \"8x8\").map(x => x.name);\n        eight = {\n          eight: eight\n        };\n        var twelve = componentArray.filter(x => x.name.split(\"_\")[0] === \"12x8\").map(x => x.name);\n        twelve = {\n          twelve: twelve\n        };\n        jsonData = { ...eight,\n          ...ten,\n          ...twelve\n        };\n        this.setState({\n          allConfigs: jsonData\n        }); //   jsonData = JSON.stringify(jsonData);\n        //   this.download(jsonData, \"json.txt\", \"text/plain\");\n      };\n\n      envLoader.load(\"https://d178re3qvjjhpw.cloudfront.net/reflection2.hdr\", texture => {\n        var cubeGenerator = new THREE.EquirectangularToCubeGenerator(texture, {\n          resolution: reflectionResolution\n        });\n        cubeGenerator.update(renderer);\n        var pmremGenerator = new THREE.PMREMGenerator(cubeGenerator.renderTarget.texture);\n        pmremGenerator.update(renderer);\n        var pmremCubeUVPacker = new THREE.PMREMCubeUVPacker(pmremGenerator.cubeLods);\n        pmremCubeUVPacker.update(renderer);\n        envMap = pmremCubeUVPacker.CubeUVRenderTarget.texture; //background image\n        // var generator = new THREE.CubemapGenerator(renderer);\n        // var renderTarget = generator.fromEquirectangular(texture, {\n        //   resolution: reflectionResolution,\n        // });\n        // scene.background = renderTarget;\n\n        loader.load(\"https://d178re3qvjjhpw.cloudfront.net/shed/Assets/Base_model.gltf\", gltf => {\n          gltf.scene.traverse(function (child) {\n            if (child.isMesh) {\n              // child.material = reflectiveMat;\n              child.material.precisionQuality = precisionQuality;\n              child.material.roughness = 0.65;\n              child.material.envMap = envMap;\n              child.material.envMapIntensity = 0.4;\n              child.castShadow = true;\n              child.receiveShadow = true;\n            } else if (child.type === \"Group\") {\n              componentArray.push(child);\n              currentConfigArray.push(child.name);\n            } else {\n              child.intensity = 0.5; // child.castShadow = true;\n            }\n          });\n          scene.add(gltf.scene);\n        });\n      });\n      this.setCurrentConfig(currentConfigArray);\n\n      const init = () => {\n        var idleTime = 0;\n        var controls;\n        var moveCam;\n        const width = this.mount.clientWidth;\n        const height = this.mount.clientHeight;\n        var camera = new THREE.PerspectiveCamera(70, width / height, 0.1, 1000);\n        camera.position.z = 5;\n        camera.position.y = 0.5;\n        var ambientLight = new THREE.AmbientLight(0xcccccc);\n        var directLight = new THREE.DirectionalLight(\"white\");\n        directLight.intensity = 0.7;\n        directLight.position.set(20, 2, 20);\n        ambientLight.intensity = 0.2;\n        directLight.castShadow = true;\n        directLight.shadow.bias = -0.0001;\n        directLight.shadow.camera.near = 10;\n        directLight.shadow.camera.far = 50;\n        directLight.shadow.mapSize.width = 2048;\n        directLight.shadow.mapSize.height = 2048;\n        directLight.shadowMapDarkness = 2;\n        directLight.shadowMapSoft = true; // var shadowCameraHelper = new THREE.CameraHelper(\n        //   directLight.shadow.camera\n        // );\n        // shadowCameraHelper.visible = true;\n\n        scene.add(directLight);\n        scene.add(ambientLight); // scene.add(shadowCameraHelper);\n\n        renderer.setPixelRatio(window.devicePixelRatio);\n        renderer.setSize(width, height);\n\n        function colorLuminance(hex, lum) {\n          hex = String(hex).replace(/[^0-9a-f]/gi, \"\");\n\n          if (hex.length < 6) {\n            hex = hex.replace(/(.)/g, \"$1$1\");\n          }\n\n          lum = lum || 0;\n          var rgb = \"#\",\n              c;\n\n          for (var i = 0; i < 3; ++i) {\n            c = parseInt(hex.substr(i * 2, 2), 16);\n            c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);\n            rgb += (\"00\" + c).substr(c.length);\n          }\n\n          return rgb;\n        }\n\n        const changeColor = (code, mesh_name) => {\n          var foundMeshesArray;\n          var color = colorLuminance(code, -0.3);\n\n          function changeColorOnChildren(foundMeshesArray) {\n            foundMeshesArray.forEach(group => {\n              group.children.forEach(item => {\n                if (item.material.name === \"Material12\") {\n                  item.material.color = new THREE.Color(color);\n                }\n              });\n            });\n          }\n\n          if (mesh_name) {\n            foundMeshesArray = componentArray.filter(x => x.name === mesh_name);\n            changeColorOnChildren(foundMeshesArray);\n          } else {\n            this.state.currentConfig.forEach(e => {\n              foundMeshesArray = componentArray.filter(x => x.name === e);\n              changeColorOnChildren(foundMeshesArray);\n            });\n          }\n\n          this.setState({\n            changeColor: false\n          });\n        };\n\n        const disableMeshGroup = name => {\n          var foundMeshes = componentArray.filter(x => x.name === name); // console.log(`disabling:`);\n          // console.log(foundMeshes);\n\n          foundMeshes[0].children.forEach(x => {\n            x.visible = false;\n          });\n        };\n\n        const enableMeshGroup = name => {\n          var foundMeshes = componentArray.filter(x => x.name === name); // console.log(`enabling:`);\n          // console.log(foundMeshes);\n\n          foundMeshes[0].children.forEach(x => {\n            x.visible = true;\n          });\n        };\n\n        const swapMeshGroups = (disableMesh, enableMesh, delay) => {\n          var check = this.checkMeshInConfig(enableMesh);\n\n          if (check) {\n            if (this.state.camTargetPosition === this.state.camPosition) {\n              delay = 0;\n              console.log(\"camera already in position\");\n            } else {\n              this.startCamAnim(this.state.camTargetPosition);\n            }\n\n            var curConfig;\n            curConfig = this.state.currentConfig;\n            curConfig[curConfig.indexOf(disableMesh)] = enableMesh;\n            this.setCurrentConfig(curConfig);\n            setTimeout(() => {\n              disableMeshGroup(disableMesh);\n              enableMeshGroup(enableMesh);\n              changeColor(this.state.color, enableMesh);\n              console.log(\"configuration changed successfully\");\n              idleTime = 0;\n            }, delay);\n          } else {\n            console.log(`${enableMesh} was not found in config database, change failed`);\n          }\n\n          this.setState({\n            disableMesh: null,\n            enableMesh: null,\n            camTargetPosition: null\n          });\n        };\n\n        const changeSize = size => {\n          var newConfig;\n\n          if (size === \"ten\" || size === \"eight\" || size === \"twelve\") {\n            if (size === \"ten\") {\n              console.log(\"switching to size Ten\");\n              newConfig = this.state.Config_10x10;\n              this.setState({\n                sizing: \"ten\"\n              });\n            } else if (size === \"eight\") {\n              console.log(\"switching to size Eight\");\n              newConfig = this.state.Config_8x10;\n              this.setState({\n                sizing: \"eight\"\n              });\n            } else if (size === \"twelve\") {\n              console.log(\"switching to size Twelve\");\n              newConfig = this.state.Config_12x10;\n              this.setState({\n                sizing: \"twelve\"\n              });\n            }\n\n            let n = 0;\n\n            while (n < this.state.currentConfig.length) {\n              disableMeshGroup(this.state.currentConfig[n]);\n              enableMeshGroup(newConfig[n]);\n              n++;\n            }\n\n            this.setCurrentConfig(newConfig);\n          } else {\n            console.log(\"Incorrect size provided: Switching size aborted\");\n          }\n\n          this.setState({\n            sizeChange: false\n          });\n        };\n\n        const resetDefaultConfig = size => {\n          var newConfig;\n          var base = this.state.currentConfig.filter(x => x.split(\"_\")[x.split(\"_\").length - 1] === \"Base\")[0];\n          var oldConfig = this.state.currentConfig.filter(item => item !== base);\n\n          if (size === \"ten\" || size === \"eight\" || size === \"twelve\") {\n            if (size === \"ten\") {\n              newConfig = this.state.default_10x10.filter(item => item !== base);\n            } else if (size === \"eight\") {\n              newConfig = this.state.default_8x10.filter(item => item !== base);\n            } else if (size === \"twelve\") {\n              newConfig = this.state.default_12x10.filter(item => item !== base);\n            }\n\n            let n = 0;\n\n            while (n < oldConfig.length) {\n              disableMeshGroup(oldConfig[n]);\n              enableMeshGroup(newConfig[n]);\n              n++;\n            }\n\n            newConfig.push(base);\n            this.setCurrentConfig(newConfig);\n          } else {\n            console.log(\"Incorrect size provided: Config reset aborted\");\n          }\n\n          this.setState({\n            resetDefault: false\n          });\n        };\n\n        const initControls = camera => {\n          controls = new OrbitControls(camera, this.mount);\n          controls.screenSpacePanning = false;\n          controls.enablePan = false;\n          controls.enableDamping = true;\n          controls.dampingFactor = 0.2;\n          controls.minZoom = 3;\n          controls.maxZoom = 30;\n          controls.minDistance = 3;\n          controls.maxDistance = 10;\n          controls.target.set(0, 0, 0);\n          controls.autoRotateSpeed = -2;\n          controls.minPolarAngle = THREE.Math.degToRad(30);\n          controls.maxPolarAngle = THREE.Math.degToRad(100); // controls.autoRotate = true;\n        }; // camera.lookAt(0, 1, 0);\n\n\n        initControls(camera); // controls.dispose();\n\n        const initAllCameraPositions = () => {\n          cameraFront = camera.clone();\n          controls.rotate(THREE.Math.degToRad(250));\n          controls.update();\n          cameraLeft = camera.clone();\n          controls.rotate(THREE.Math.degToRad(-660));\n          controls.update();\n          cameraRight = camera.clone();\n          controls.rotate(THREE.Math.degToRad(70));\n          controls.update();\n          cameraBack = camera.clone();\n          controls.rotate(THREE.Math.degToRad(-20));\n          controls.autoRotate = this.state.autoRotate;\n\n          if (!this.state.autoRotate) {\n            this.setState({\n              camPosition: \"Front\"\n            });\n          }\n        };\n\n        const initTween = function (camera, requiredCamPosition) {\n          moveCam = new TWEEN.Tween({\n            t: 0\n          }).to({\n            t: 1\n          }, 1000).onUpdate(tween => {\n            camera.quaternion.slerp(requiredCamPosition.quaternion, tween.t);\n          }).onStart(function () {\n            new TWEEN.Tween(camera.position).to(requiredCamPosition.position, 500).start();\n          }).onComplete(function () {\n            initTween(camera);\n            controls.enabled = true;\n            this.camAnimActivate = false;\n            console.log(\"animation completed\");\n          });\n        };\n\n        setInterval(() => {\n          idleTime += 2;\n        }, 2000);\n        this.mount.appendChild(renderer.domElement);\n\n        const animate = () => {\n          controls.update();\n\n          if (idleTime > 8 && !controls.autoRotate) {\n            idleTime = 0;\n\n            if (this.state.autoRotate) {\n              console.log(\"auto rotation starting\");\n              this.resetCamPosition();\n            }\n\n            controls.autoRotate = this.state.autoRotate;\n          }\n\n          this.frameId = window.requestAnimationFrame(animate);\n          renderer.render(scene, camera);\n          TWEEN.update();\n\n          if (!this.state.camTargetsActivated) {\n            initAllCameraPositions();\n            this.setState({\n              camTargetsActivated: true\n            });\n          }\n\n          if (this.state.camAnimActivate) {\n            idleTime = 0;\n            initTween(camera, this.state.camAnimTarget);\n            controls.enabled = false;\n            controls.autoRotate = false;\n            moveCam.start();\n            this.setState({\n              camAnimActivate: false\n            });\n          }\n\n          if (this.state.extrasDownloaded && this.state.enableMesh != null && !this.state.camAnimActivate) {\n            swapMeshGroups(this.state.disableMesh, this.state.enableMesh, 500);\n          }\n\n          if (this.state.extrasDownloaded && this.state.sizeChange) {\n            changeSize(this.state.sizing);\n          }\n\n          if (this.state.changeColor) {\n            changeColor(this.state.color);\n          }\n\n          if (this.state.resetDefault !== false) {\n            resetDefaultConfig(this.state.resetDefault);\n          }\n        };\n\n        const handleWindowResize = () => {\n          const width = this.mount.clientWidth;\n          const height = this.mount.clientHeight;\n          camera.aspect = width / height;\n          camera.updateProjectionMatrix();\n          renderer.setSize(width, height);\n        };\n\n        window.addEventListener(\"resize\", handleWindowResize);\n        this.mount.addEventListener(\"click\", this.resetCamPosition);\n        this.mount.addEventListener(\"touchend\", this.resetCamPosition);\n        animate();\n\n        if (!this.state.threeLoaded) {\n          this.setState({\n            threeLoaded: true\n          });\n        }\n      };\n    };\n\n    this.state = {\n      threeLoaded: false,\n      autoRotate: false,\n      prevConfig: null,\n      extrasDownloaded: false,\n      sizing: \"ten\",\n      sizeChange: false,\n      resetDefault: false,\n      camTargetsActivated: false,\n      color: null,\n      changeColor: false,\n      camAnimTarget: \"null\",\n      camAnimActivate: false,\n      camPosition: \"unknown\",\n      camTargetPosition: null,\n      allConfigs: {},\n      currentConfig: [],\n      Config_8x10: [\"8x8_Base\", \"8x8_Back_44s_s\", \"8x8_Left_44s_s\", \"8x8_Right_44s_s\", \"8x8_Front_door_22s\"],\n      Config_10x10: [\"10x8_Base\", \"10x8_Back_44s_22s_44s\", \"10x8_Left_44s_s\", \"10x8_Right_44s_s\", \"10x8_Front_22s_door_22s\"],\n      Config_12x10: [\"12x8_Base\", \"12x8_Back_44s_s_s\", \"12x8_Left_44s_22s_44s\", \"12x8_Right_44s_22s_44s\", \"12x8_Front_22s_door_44s\"],\n      default_8x10: [],\n      default_10x10: [],\n      default_12x10: [],\n      defaultsSet: false,\n      disableMesh: null,\n      enableMesh: null\n    };\n    this.remount = this.remount.bind(this);\n    this.stop = this.stop.bind(this);\n    this.resetCamPosition = this.resetCamPosition.bind(this);\n    this.setCurrentConfig = this.setCurrentConfig.bind(this);\n    this.updateExtrasState = this.updateExtrasState.bind(this);\n    this.checkMeshInConfig = this.checkMeshInConfig.bind(this);\n    this.resetDefaultConfig = this.resetDefaultConfig.bind(this);\n  }\n\n  startCamAnim(direction) {\n    if (!this.state.camAnimActivate) {\n      var camPosition;\n      var target;\n\n      if (direction === \"Front\") {\n        target = cameraFront;\n        camPosition = \"Front\";\n      } else if (direction === \"Back\") {\n        target = cameraBack;\n        camPosition = \"Back\";\n      } else if (direction === \"Left\") {\n        target = cameraLeft;\n        camPosition = \"Left\";\n      } else if (direction === \"Right\") {\n        target = cameraRight;\n        camPosition = \"Right\";\n      }\n\n      this.setState({\n        camAnimTarget: target,\n        camAnimActivate: true,\n        camPosition: camPosition\n      });\n    }\n  }\n\n  updateExtrasState() {\n    console.log(\"extras finished downloading\");\n    this.setState({\n      extrasDownloaded: true\n    });\n  }\n\n  setCurrentConfig(array) {\n    console.log(\"configuration updated\");\n    var sizing = this.state.sizing;\n    this.setState({\n      currentConfig: array\n    });\n\n    if (sizing === \"eight\") {\n      this.setState({\n        Config_8x10: array\n      });\n    } else if (sizing === \"ten\") {\n      this.setState({\n        Config_10x10: array\n      });\n    } else if (sizing === \"twelve\") {\n      this.setState({\n        Config12x10: array\n      });\n    }\n  }\n\n  resetCamPosition() {\n    if (this.state.camPosition !== \"unknown\") {\n      this.setState({\n        camPosition: \"unknown\"\n      });\n      console.log(\"cam position moved\");\n    }\n  }\n\n  resetDefaultConfig(size) {\n    console.log(`resetting defaults for ${size}`);\n    this.setState({\n      resetDefault: size\n    });\n  }\n\n  mutateConfigName(sizing, configuration) {\n    var size;\n    var config;\n    var name;\n\n    if (sizing === \"eight\") {\n      size = \"8x8\";\n    } else if (sizing === \"ten\") {\n      size = \"10x8\";\n    } else if (sizing === \"twelve\") {\n      size = \"12x8\";\n    }\n\n    if (configuration[0] === \"F\") {\n      config = \"Front\" + configuration.slice(1);\n    } else if (configuration[0] === \"B\") {\n      config = \"Back\" + configuration.slice(1);\n    } else if (configuration[0] === \"L\") {\n      config = \"Left\" + configuration.slice(1);\n    } else if (configuration[0] === \"R\") {\n      config = \"Right\" + configuration.slice(1);\n    }\n\n    name = size + \"_\" + config;\n    return name;\n  }\n\n  download(content, fileName, contentType) {\n    var a = document.createElement(\"a\");\n    var file = new Blob([content], {\n      type: contentType\n    });\n    a.href = URL.createObjectURL(file);\n    a.download = fileName;\n    a.click();\n  }\n\n  stop() {\n    cancelAnimationFrame(this.frameId);\n  }\n\n  componentDidMount() {\n    this.initiateScene();\n\n    if (!this.state.defaultsSet) {\n      this.setState({\n        default_10x10: [...this.state.Config_10x10],\n        default_8x10: [...this.state.Config_8x10],\n        default_12x10: [...this.state.Config_12x10],\n        defaultsSet: true\n      });\n      setTimeout(() => {\n        console.log(this.state);\n      }, 2000);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.state.threeLoaded && this.props.sizing && this.props.configuration && this.props.configuration !== this.state.prevConfig || this.props.sizing !== this.state.sizing) {\n      var passedConfig;\n      var camPosition;\n\n      if (this.state.sizing === this.props.sizing) {\n        console.log(\"size is the same\");\n        passedConfig = this.mutateConfigName(this.props.sizing, this.props.configuration);\n\n        if (this.state.currentConfig.includes(passedConfig)) {\n          console.log(\"current config already includes this\");\n        } else {\n          camPosition = passedConfig.split(\"_\")[1];\n\n          if (this.state.camPosition === camPosition) {\n            console.log(`Camera is already showing ${camPosition}`);\n            this.setState({\n              camTargetPosition: camPosition\n            }); //switch configuration here\n            //find mesh to disable\n\n            var curConfig = this.state.currentConfig;\n            var meshToDisable;\n            curConfig.forEach(e => {\n              e.split(\"_\").forEach(x => {\n                if (x === camPosition) {\n                  meshToDisable = e;\n                }\n              });\n            });\n            this.setState({\n              disableMesh: meshToDisable,\n              enableMesh: passedConfig\n            });\n          } else {\n            console.log(`Camera will move to ${camPosition}`);\n            this.setState({\n              camTargetPosition: camPosition\n            });\n            var curConfig = this.state.currentConfig;\n            var meshToDisable;\n            curConfig.forEach(e => {\n              e.split(\"_\").forEach(x => {\n                if (x === camPosition) {\n                  meshToDisable = e;\n                }\n              });\n            });\n            this.setState({\n              disableMesh: meshToDisable,\n              enableMesh: passedConfig\n            }); //disable found mesh\n          }\n        }\n      } else {\n        //change base model here\n        this.setState({\n          sizeChange: true,\n          sizing: this.props.sizing,\n          changeColor: true\n        });\n      }\n\n      this.setState({\n        prevConfig: this.props.configuration\n      });\n    }\n\n    if (this.state.threeLoaded && this.props.color !== this.state.color) {\n      console.log(\"color updated to \" + this.props.color);\n      this.setState({\n        changeColor: true,\n        color: this.props.color\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.stop();\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Three\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"DisplayContainer\",\n      ref: ref => this.mount = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.resetDefaultConfig(this.state.sizing);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 9\n      }\n    }, \"Reset to default configuration\"));\n  }\n\n}\n\nexport default Display;","map":{"version":3,"sources":["C:/Users/Ryan/Desktop/Clients/shed-configurator/shed_v4/src/components/Display/Display.js"],"names":["React","Component","THREE","TWEEN","OrbitControls","scene","Scene","cameraFront","cameraRight","cameraLeft","cameraBack","Display","constructor","props","checkMeshInConfig","name","state","extrasDownloaded","allConfigs","sizing","includes","remount","componentWillUnmount","componentDidMount","initiateScene","envMap","currentConfigArray","reflectionResolution","componentArray","jsonData","precisionQuality","preloader","document","createElement","id","manager","LoadingManager","manager2","loader","GLTFLoader","loader2","renderer","WebGLRenderer","alpha","antialias","envLoader","RGBELoader","outputEncoding","sRGBEncoding","gammaOutput","gammaInput","gammaFactor","shadowMap","enabled","type","PCFSoftShadowMap","shadowMapSoft","shadowMapDarkness","shadowMapWidth","shadowMapHeight","reflectiveMat","MeshStandardMaterial","color","metalness","roughness","precision","onStart","url","itemsLoaded","itemsTotal","onLoad","console","log","setTimeout","init","style","display","load","gltf","traverse","child","isMesh","material","envMapIntensity","visible","castShadow","receiveShadow","push","add","onProgress","item","loaded","total","percentageLoad","innerHTML","mount","appendChild","onError","updateExtrasState","ten","filter","x","split","map","eight","twelve","setState","texture","cubeGenerator","EquirectangularToCubeGenerator","resolution","update","pmremGenerator","PMREMGenerator","renderTarget","pmremCubeUVPacker","PMREMCubeUVPacker","cubeLods","CubeUVRenderTarget","intensity","setCurrentConfig","idleTime","controls","moveCam","width","clientWidth","height","clientHeight","camera","PerspectiveCamera","position","z","y","ambientLight","AmbientLight","directLight","DirectionalLight","set","shadow","bias","near","far","mapSize","setPixelRatio","window","devicePixelRatio","setSize","colorLuminance","hex","lum","String","replace","length","rgb","c","i","parseInt","substr","Math","round","min","max","toString","changeColor","code","mesh_name","foundMeshesArray","changeColorOnChildren","forEach","group","children","Color","currentConfig","e","disableMeshGroup","foundMeshes","enableMeshGroup","swapMeshGroups","disableMesh","enableMesh","delay","check","camTargetPosition","camPosition","startCamAnim","curConfig","indexOf","changeSize","size","newConfig","Config_10x10","Config_8x10","Config_12x10","n","sizeChange","resetDefaultConfig","base","oldConfig","default_10x10","default_8x10","default_12x10","resetDefault","initControls","screenSpacePanning","enablePan","enableDamping","dampingFactor","minZoom","maxZoom","minDistance","maxDistance","target","autoRotateSpeed","minPolarAngle","degToRad","maxPolarAngle","initAllCameraPositions","clone","rotate","autoRotate","initTween","requiredCamPosition","Tween","t","to","onUpdate","tween","quaternion","slerp","start","onComplete","camAnimActivate","setInterval","domElement","animate","resetCamPosition","frameId","requestAnimationFrame","render","camTargetsActivated","camAnimTarget","handleWindowResize","aspect","updateProjectionMatrix","addEventListener","threeLoaded","prevConfig","defaultsSet","bind","stop","direction","array","Config12x10","mutateConfigName","configuration","config","slice","download","content","fileName","contentType","a","file","Blob","href","URL","createObjectURL","click","cancelAnimationFrame","componentDidUpdate","passedConfig","meshToDisable","removeChild","ref"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Display.css\";\n\nimport * as THREE from \"three\";\n\nimport TWEEN from \"@tweenjs/tween.js\";\nimport { OrbitControls } from \"./OrbitControls.js\";\n\nvar scene = new THREE.Scene();\n\nvar cameraFront, cameraRight, cameraLeft, cameraBack;\n\nclass Display extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      threeLoaded: false,\n      autoRotate: false,\n      prevConfig: null,\n      extrasDownloaded: false,\n      sizing: \"ten\",\n      sizeChange: false,\n      resetDefault: false,\n      camTargetsActivated: false,\n      color: null,\n      changeColor: false,\n      camAnimTarget: \"null\",\n      camAnimActivate: false,\n      camPosition: \"unknown\",\n      camTargetPosition: null,\n      allConfigs: {},\n      currentConfig: [],\n      Config_8x10: [\n        \"8x8_Base\",\n        \"8x8_Back_44s_s\",\n        \"8x8_Left_44s_s\",\n        \"8x8_Right_44s_s\",\n        \"8x8_Front_door_22s\",\n      ],\n      Config_10x10: [\n        \"10x8_Base\",\n        \"10x8_Back_44s_22s_44s\",\n        \"10x8_Left_44s_s\",\n        \"10x8_Right_44s_s\",\n        \"10x8_Front_22s_door_22s\",\n      ],\n      Config_12x10: [\n        \"12x8_Base\",\n        \"12x8_Back_44s_s_s\",\n        \"12x8_Left_44s_22s_44s\",\n        \"12x8_Right_44s_22s_44s\",\n        \"12x8_Front_22s_door_44s\",\n      ],\n      default_8x10: [],\n      default_10x10: [],\n      default_12x10: [],\n      defaultsSet: false,\n      disableMesh: null,\n      enableMesh: null,\n    };\n    this.remount = this.remount.bind(this);\n    this.stop = this.stop.bind(this);\n    this.resetCamPosition = this.resetCamPosition.bind(this);\n    this.setCurrentConfig = this.setCurrentConfig.bind(this);\n    this.updateExtrasState = this.updateExtrasState.bind(this);\n    this.checkMeshInConfig = this.checkMeshInConfig.bind(this);\n    this.resetDefaultConfig = this.resetDefaultConfig.bind(this);\n  }\n\n  startCamAnim(direction) {\n    if (!this.state.camAnimActivate) {\n      var camPosition;\n      var target;\n      if (direction === \"Front\") {\n        target = cameraFront;\n        camPosition = \"Front\";\n      } else if (direction === \"Back\") {\n        target = cameraBack;\n        camPosition = \"Back\";\n      } else if (direction === \"Left\") {\n        target = cameraLeft;\n        camPosition = \"Left\";\n      } else if (direction === \"Right\") {\n        target = cameraRight;\n        camPosition = \"Right\";\n      }\n      this.setState({\n        camAnimTarget: target,\n        camAnimActivate: true,\n        camPosition: camPosition,\n      });\n    }\n  }\n\n  updateExtrasState() {\n    console.log(\"extras finished downloading\");\n    this.setState({ extrasDownloaded: true });\n  }\n\n  checkMeshInConfig = (name) => {\n    if (this.state.extrasDownloaded) {\n      return this.state.allConfigs[this.state.sizing].includes(name);\n    }\n  };\n\n  setCurrentConfig(array) {\n    console.log(\"configuration updated\");\n    var sizing = this.state.sizing;\n    this.setState({ currentConfig: array });\n    if (sizing === \"eight\") {\n      this.setState({ Config_8x10: array });\n    } else if (sizing === \"ten\") {\n      this.setState({ Config_10x10: array });\n    } else if (sizing === \"twelve\") {\n      this.setState({ Config12x10: array });\n    }\n  }\n\n  resetCamPosition() {\n    if (this.state.camPosition !== \"unknown\") {\n      this.setState({ camPosition: \"unknown\" });\n      console.log(\"cam position moved\");\n    }\n  }\n\n  remount = () => {\n    this.componentWillUnmount();\n    this.componentDidMount();\n  };\n\n  resetDefaultConfig(size) {\n    console.log(`resetting defaults for ${size}`);\n    this.setState({ resetDefault: size });\n  }\n\n  mutateConfigName(sizing, configuration) {\n    var size;\n    var config;\n    var name;\n    if (sizing === \"eight\") {\n      size = \"8x8\";\n    } else if (sizing === \"ten\") {\n      size = \"10x8\";\n    } else if (sizing === \"twelve\") {\n      size = \"12x8\";\n    }\n    if (configuration[0] === \"F\") {\n      config = \"Front\" + configuration.slice(1);\n    } else if (configuration[0] === \"B\") {\n      config = \"Back\" + configuration.slice(1);\n    } else if (configuration[0] === \"L\") {\n      config = \"Left\" + configuration.slice(1);\n    } else if (configuration[0] === \"R\") {\n      config = \"Right\" + configuration.slice(1);\n    }\n    name = size + \"_\" + config;\n    return name;\n  }\n\n  download(content, fileName, contentType) {\n    var a = document.createElement(\"a\");\n    var file = new Blob([content], { type: contentType });\n    a.href = URL.createObjectURL(file);\n    a.download = fileName;\n    a.click();\n  }\n\n  stop() {\n    cancelAnimationFrame(this.frameId);\n  }\n\n  initiateScene = () => {\n    var envMap;\n    var currentConfigArray = [];\n    var reflectionResolution;\n    var componentArray = [];\n    var jsonData;\n    var precisionQuality = \"highp\";\n    var reflectionResolution = 1024;\n\n    var preloader = document.createElement(\"div\");\n    preloader.id = \"loader\";\n\n    const manager = new THREE.LoadingManager();\n    const manager2 = new THREE.LoadingManager();\n\n    const loader = new THREE.GLTFLoader(manager);\n    const loader2 = new THREE.GLTFLoader(manager2);\n\n    const renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });\n\n    const envLoader = new THREE.RGBELoader(manager);\n    renderer.outputEncoding = THREE.sRGBEncoding;\n    renderer.gammaOutput = true;\n    renderer.gammaInput = true;\n    renderer.gammaFactor = 2.2;\n\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    renderer.shadowMapSoft = true;\n\n    // renderer.shadowMapBias = 0.0039;\n    renderer.shadowMapDarkness = 2;\n    renderer.shadowMapWidth = 1024;\n    renderer.shadowMapHeight = 1024;\n\n    // renderer.shadowCameraFar = 100;\n    // renderer.shadowCameraFov = 80;\n\n    var reflectiveMat = new THREE.MeshStandardMaterial({\n      color: \"white\",\n      metalness: 1,\n      roughness: 0,\n      precision: precisionQuality,\n    });\n\n    manager.onStart = function (url, itemsLoaded, itemsTotal) {\n      // console.log('Started loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.');\n    };\n\n    manager.onLoad = function () {\n      console.log(\"Loading complete!\");\n      setTimeout(init, 100);\n      preloader.style.display = \"none\";\n\n      loader2.load(\n        \"https://d178re3qvjjhpw.cloudfront.net/shed/Assets/Extras_new3_comp.gltf\",\n        (gltf) => {\n          gltf.scene.traverse(function (child) {\n            if (child.isMesh) {\n              // console.log(child.name);\n              // child.material = reflectiveMat;\n              child.material.precisionQuality = precisionQuality;\n              child.material.roughness = 0.65;\n              child.material.envMap = envMap;\n              child.material.envMapIntensity = 0.4;\n              child.visible = false;\n              child.castShadow = true;\n              child.receiveShadow = true;\n              // scene.add(child);\n            } else if (child.type === \"Group\") {\n              componentArray.push(child);\n            }\n          });\n          scene.add(gltf.scene);\n        }\n      );\n    };\n\n    manager.onProgress = function (item, loaded, total) {\n      var percentageLoad = (loaded / total) * 100 + \"%\";\n      console.log(percentageLoad);\n\n      preloader.innerHTML = percentageLoad;\n      // console.log(preloader);\n    };\n\n    this.mount.appendChild(preloader);\n\n    manager.onError = function (url) {\n      console.log(\"There was an error loading \" + url);\n    };\n\n    manager2.onLoad = () => {\n      this.updateExtrasState();\n      var ten = componentArray\n        .filter((x) => x.name.split(\"_\")[0] === \"10x8\")\n        .map((x) => x.name);\n      ten = { ten: ten };\n      var eight = componentArray\n        .filter((x) => x.name.split(\"_\")[0] === \"8x8\")\n        .map((x) => x.name);\n      eight = { eight: eight };\n      var twelve = componentArray\n        .filter((x) => x.name.split(\"_\")[0] === \"12x8\")\n        .map((x) => x.name);\n      twelve = { twelve: twelve };\n      jsonData = { ...eight, ...ten, ...twelve };\n      this.setState({ allConfigs: jsonData });\n      //   jsonData = JSON.stringify(jsonData);\n      //   this.download(jsonData, \"json.txt\", \"text/plain\");\n    };\n\n    envLoader.load(\n      \"https://d178re3qvjjhpw.cloudfront.net/reflection2.hdr\",\n      (texture) => {\n        var cubeGenerator = new THREE.EquirectangularToCubeGenerator(texture, {\n          resolution: reflectionResolution,\n        });\n        cubeGenerator.update(renderer);\n        var pmremGenerator = new THREE.PMREMGenerator(\n          cubeGenerator.renderTarget.texture\n        );\n        pmremGenerator.update(renderer);\n        var pmremCubeUVPacker = new THREE.PMREMCubeUVPacker(\n          pmremGenerator.cubeLods\n        );\n        pmremCubeUVPacker.update(renderer);\n\n        envMap = pmremCubeUVPacker.CubeUVRenderTarget.texture;\n\n        //background image\n        // var generator = new THREE.CubemapGenerator(renderer);\n        // var renderTarget = generator.fromEquirectangular(texture, {\n        //   resolution: reflectionResolution,\n        // });\n\n        // scene.background = renderTarget;\n\n        loader.load(\n          \"https://d178re3qvjjhpw.cloudfront.net/shed/Assets/Base_model.gltf\",\n          (gltf) => {\n            gltf.scene.traverse(function (child) {\n              if (child.isMesh) {\n                // child.material = reflectiveMat;\n                child.material.precisionQuality = precisionQuality;\n                child.material.roughness = 0.65;\n                child.material.envMap = envMap;\n                child.material.envMapIntensity = 0.4;\n                child.castShadow = true;\n                child.receiveShadow = true;\n              } else if (child.type === \"Group\") {\n                componentArray.push(child);\n                currentConfigArray.push(child.name);\n              } else {\n                child.intensity = 0.5;\n                // child.castShadow = true;\n              }\n            });\n\n            scene.add(gltf.scene);\n          }\n        );\n      }\n    );\n\n    this.setCurrentConfig(currentConfigArray);\n\n    const init = () => {\n      var idleTime = 0;\n      var controls;\n      var moveCam;\n      const width = this.mount.clientWidth;\n      const height = this.mount.clientHeight;\n      var camera = new THREE.PerspectiveCamera(70, width / height, 0.1, 1000);\n      camera.position.z = 5;\n      camera.position.y = 0.5;\n      var ambientLight = new THREE.AmbientLight(0xcccccc);\n      var directLight = new THREE.DirectionalLight(\"white\");\n      directLight.intensity = 0.7;\n      directLight.position.set(20, 2, 20);\n      ambientLight.intensity = 0.2;\n      directLight.castShadow = true;\n      directLight.shadow.bias = -0.0001;\n      directLight.shadow.camera.near = 10;\n      directLight.shadow.camera.far = 50;\n      directLight.shadow.mapSize.width = 2048;\n      directLight.shadow.mapSize.height = 2048;\n      directLight.shadowMapDarkness = 2;\n      directLight.shadowMapSoft = true;\n\n      // var shadowCameraHelper = new THREE.CameraHelper(\n      //   directLight.shadow.camera\n      // );\n      // shadowCameraHelper.visible = true;\n\n      scene.add(directLight);\n      scene.add(ambientLight);\n      // scene.add(shadowCameraHelper);\n\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(width, height);\n\n      function colorLuminance(hex, lum) {\n        hex = String(hex).replace(/[^0-9a-f]/gi, \"\");\n        if (hex.length < 6) {\n          hex = hex.replace(/(.)/g, \"$1$1\");\n        }\n        lum = lum || 0;\n        var rgb = \"#\",\n          c;\n        for (var i = 0; i < 3; ++i) {\n          c = parseInt(hex.substr(i * 2, 2), 16);\n          c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);\n          rgb += (\"00\" + c).substr(c.length);\n        }\n        return rgb;\n      }\n\n      const changeColor = (code, mesh_name) => {\n        var foundMeshesArray;\n        var color = colorLuminance(code, -0.3);\n        function changeColorOnChildren(foundMeshesArray) {\n          foundMeshesArray.forEach((group) => {\n            group.children.forEach((item) => {\n              if (item.material.name === \"Material12\") {\n                item.material.color = new THREE.Color(color);\n              }\n            });\n          });\n        }\n        if (mesh_name) {\n          foundMeshesArray = componentArray.filter((x) => x.name === mesh_name);\n          changeColorOnChildren(foundMeshesArray);\n        } else {\n          this.state.currentConfig.forEach((e) => {\n            foundMeshesArray = componentArray.filter((x) => x.name === e);\n            changeColorOnChildren(foundMeshesArray);\n          });\n        }\n\n        this.setState({ changeColor: false });\n      };\n\n      const disableMeshGroup = (name) => {\n        var foundMeshes = componentArray.filter((x) => x.name === name);\n        // console.log(`disabling:`);\n        // console.log(foundMeshes);\n        foundMeshes[0].children.forEach((x) => {\n          x.visible = false;\n        });\n      };\n\n      const enableMeshGroup = (name) => {\n        var foundMeshes = componentArray.filter((x) => x.name === name);\n        // console.log(`enabling:`);\n        // console.log(foundMeshes);\n        foundMeshes[0].children.forEach((x) => {\n          x.visible = true;\n        });\n      };\n\n      const swapMeshGroups = (disableMesh, enableMesh, delay) => {\n        var check = this.checkMeshInConfig(enableMesh);\n        if (check) {\n          if (this.state.camTargetPosition === this.state.camPosition) {\n            delay = 0;\n            console.log(\"camera already in position\");\n          } else {\n            this.startCamAnim(this.state.camTargetPosition);\n          }\n          var curConfig;\n          curConfig = this.state.currentConfig;\n          curConfig[curConfig.indexOf(disableMesh)] = enableMesh;\n          this.setCurrentConfig(curConfig);\n\n          setTimeout(() => {\n            disableMeshGroup(disableMesh);\n            enableMeshGroup(enableMesh);\n            changeColor(this.state.color, enableMesh);\n            console.log(\"configuration changed successfully\");\n            idleTime = 0;\n          }, delay);\n        } else {\n          console.log(\n            `${enableMesh} was not found in config database, change failed`\n          );\n        }\n        this.setState({\n          disableMesh: null,\n          enableMesh: null,\n          camTargetPosition: null,\n        });\n      };\n\n      const changeSize = (size) => {\n        var newConfig;\n        if (size === \"ten\" || size === \"eight\" || size === \"twelve\") {\n          if (size === \"ten\") {\n            console.log(\"switching to size Ten\");\n            newConfig = this.state.Config_10x10;\n            this.setState({ sizing: \"ten\" });\n          } else if (size === \"eight\") {\n            console.log(\"switching to size Eight\");\n            newConfig = this.state.Config_8x10;\n            this.setState({ sizing: \"eight\" });\n          } else if (size === \"twelve\") {\n            console.log(\"switching to size Twelve\");\n            newConfig = this.state.Config_12x10;\n            this.setState({ sizing: \"twelve\" });\n          }\n          let n = 0;\n          while (n < this.state.currentConfig.length) {\n            disableMeshGroup(this.state.currentConfig[n]);\n            enableMeshGroup(newConfig[n]);\n            n++;\n          }\n          this.setCurrentConfig(newConfig);\n        } else {\n          console.log(\"Incorrect size provided: Switching size aborted\");\n        }\n\n        this.setState({ sizeChange: false });\n      };\n\n      const resetDefaultConfig = (size) => {\n        var newConfig;\n        var base = this.state.currentConfig.filter(\n          (x) => x.split(\"_\")[x.split(\"_\").length - 1] === \"Base\"\n        )[0];\n        var oldConfig = this.state.currentConfig.filter(\n          (item) => item !== base\n        );\n\n        if (size === \"ten\" || size === \"eight\" || size === \"twelve\") {\n          if (size === \"ten\") {\n            newConfig = this.state.default_10x10.filter(\n              (item) => item !== base\n            );\n          } else if (size === \"eight\") {\n            newConfig = this.state.default_8x10.filter((item) => item !== base);\n          } else if (size === \"twelve\") {\n            newConfig = this.state.default_12x10.filter(\n              (item) => item !== base\n            );\n          }\n          let n = 0;\n          while (n < oldConfig.length) {\n            disableMeshGroup(oldConfig[n]);\n            enableMeshGroup(newConfig[n]);\n\n            n++;\n          }\n          newConfig.push(base);\n          this.setCurrentConfig(newConfig);\n        } else {\n          console.log(\"Incorrect size provided: Config reset aborted\");\n        }\n\n        this.setState({ resetDefault: false });\n      };\n\n      const initControls = (camera) => {\n        controls = new OrbitControls(camera, this.mount);\n        controls.screenSpacePanning = false;\n        controls.enablePan = false;\n        controls.enableDamping = true;\n        controls.dampingFactor = 0.2;\n        controls.minZoom = 3;\n        controls.maxZoom = 30;\n        controls.minDistance = 3;\n        controls.maxDistance = 10;\n        controls.target.set(0, 0, 0);\n        controls.autoRotateSpeed = -2;\n        controls.minPolarAngle = THREE.Math.degToRad(30);\n        controls.maxPolarAngle = THREE.Math.degToRad(100);\n\n        // controls.autoRotate = true;\n      };\n      // camera.lookAt(0, 1, 0);\n\n      initControls(camera);\n\n      // controls.dispose();\n\n      const initAllCameraPositions = () => {\n        cameraFront = camera.clone();\n        controls.rotate(THREE.Math.degToRad(250));\n        controls.update();\n        cameraLeft = camera.clone();\n        controls.rotate(THREE.Math.degToRad(-660));\n        controls.update();\n        cameraRight = camera.clone();\n        controls.rotate(THREE.Math.degToRad(70));\n        controls.update();\n        cameraBack = camera.clone();\n        controls.rotate(THREE.Math.degToRad(-20));\n        controls.autoRotate = this.state.autoRotate;\n        if (!this.state.autoRotate) {\n          this.setState({ camPosition: \"Front\" });\n        }\n      };\n\n      const initTween = function (camera, requiredCamPosition) {\n        moveCam = new TWEEN.Tween({ t: 0 })\n          .to({ t: 1 }, 1000)\n          .onUpdate((tween) => {\n            camera.quaternion.slerp(requiredCamPosition.quaternion, tween.t);\n          })\n          .onStart(function () {\n            new TWEEN.Tween(camera.position)\n              .to(requiredCamPosition.position, 500)\n              .start();\n          })\n          .onComplete(function () {\n            initTween(camera);\n            controls.enabled = true;\n            this.camAnimActivate = false;\n            console.log(\"animation completed\");\n          });\n      };\n\n      setInterval(() => {\n        idleTime += 2;\n      }, 2000);\n\n      this.mount.appendChild(renderer.domElement);\n\n      const animate = () => {\n        controls.update();\n        if (idleTime > 8 && !controls.autoRotate) {\n          idleTime = 0;\n          if (this.state.autoRotate) {\n            console.log(\"auto rotation starting\");\n            this.resetCamPosition();\n          }\n          controls.autoRotate = this.state.autoRotate;\n        }\n        this.frameId = window.requestAnimationFrame(animate);\n        renderer.render(scene, camera);\n        TWEEN.update();\n        if (!this.state.camTargetsActivated) {\n          initAllCameraPositions();\n          this.setState({ camTargetsActivated: true });\n        }\n        if (this.state.camAnimActivate) {\n          idleTime = 0;\n          initTween(camera, this.state.camAnimTarget);\n          controls.enabled = false;\n          controls.autoRotate = false;\n          moveCam.start();\n          this.setState({ camAnimActivate: false });\n        }\n        if (\n          this.state.extrasDownloaded &&\n          this.state.enableMesh != null &&\n          !this.state.camAnimActivate\n        ) {\n          swapMeshGroups(this.state.disableMesh, this.state.enableMesh, 500);\n        }\n\n        if (this.state.extrasDownloaded && this.state.sizeChange) {\n          changeSize(this.state.sizing);\n        }\n        if (this.state.changeColor) {\n          changeColor(this.state.color);\n        }\n        if (this.state.resetDefault !== false) {\n          resetDefaultConfig(this.state.resetDefault);\n        }\n      };\n\n      const handleWindowResize = () => {\n        const width = this.mount.clientWidth;\n        const height = this.mount.clientHeight;\n\n        camera.aspect = width / height;\n        camera.updateProjectionMatrix();\n        renderer.setSize(width, height);\n      };\n\n      window.addEventListener(\"resize\", handleWindowResize);\n      this.mount.addEventListener(\"click\", this.resetCamPosition);\n      this.mount.addEventListener(\"touchend\", this.resetCamPosition);\n\n      animate();\n      if (!this.state.threeLoaded) {\n        this.setState({ threeLoaded: true });\n      }\n    };\n  };\n\n  componentDidMount() {\n    this.initiateScene();\n    if (!this.state.defaultsSet) {\n      this.setState({\n        default_10x10: [...this.state.Config_10x10],\n        default_8x10: [...this.state.Config_8x10],\n        default_12x10: [...this.state.Config_12x10],\n        defaultsSet: true,\n      });\n      setTimeout(() => {\n        console.log(this.state);\n      }, 2000);\n    }\n  }\n  componentDidUpdate() {\n    if (\n      (this.state.threeLoaded &&\n        this.props.sizing &&\n        this.props.configuration &&\n        this.props.configuration !== this.state.prevConfig) ||\n      this.props.sizing !== this.state.sizing\n    ) {\n      var passedConfig;\n      var camPosition;\n      if (this.state.sizing === this.props.sizing) {\n        console.log(\"size is the same\");\n        passedConfig = this.mutateConfigName(\n          this.props.sizing,\n          this.props.configuration\n        );\n        if (this.state.currentConfig.includes(passedConfig)) {\n          console.log(\"current config already includes this\");\n        } else {\n          camPosition = passedConfig.split(\"_\")[1];\n          if (this.state.camPosition === camPosition) {\n            console.log(`Camera is already showing ${camPosition}`);\n            this.setState({ camTargetPosition: camPosition });\n            //switch configuration here\n            //find mesh to disable\n            var curConfig = this.state.currentConfig;\n            var meshToDisable;\n            curConfig.forEach((e) => {\n              e.split(\"_\").forEach((x) => {\n                if (x === camPosition) {\n                  meshToDisable = e;\n                }\n              });\n            });\n            this.setState({\n              disableMesh: meshToDisable,\n              enableMesh: passedConfig,\n            });\n          } else {\n            console.log(`Camera will move to ${camPosition}`);\n            this.setState({ camTargetPosition: camPosition });\n            var curConfig = this.state.currentConfig;\n            var meshToDisable;\n            curConfig.forEach((e) => {\n              e.split(\"_\").forEach((x) => {\n                if (x === camPosition) {\n                  meshToDisable = e;\n                }\n              });\n            });\n            this.setState({\n              disableMesh: meshToDisable,\n              enableMesh: passedConfig,\n            });\n            //disable found mesh\n          }\n        }\n      } else {\n        //change base model here\n        this.setState({\n          sizeChange: true,\n          sizing: this.props.sizing,\n          changeColor: true,\n        });\n      }\n\n      this.setState({ prevConfig: this.props.configuration });\n    }\n    if (this.state.threeLoaded && this.props.color !== this.state.color) {\n      console.log(\"color updated to \" + this.props.color);\n\n      this.setState({\n        changeColor: true,\n        color: this.props.color,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.stop();\n\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  render() {\n    return (\n      <div className=\"Three\">\n        <div className=\"DisplayContainer\" ref={(ref) => (this.mount = ref)} />\n        {/* <button onClick={() => this.startCamAnim(\"Front\")}>South</button>\n        <button onClick={() => this.startCamAnim(\"Left\")}>Left</button>\n        <button onClick={() => this.startCamAnim(\"Right\")}>Right</button>\n        <button onClick={() => this.startCamAnim(\"Back\")}>North</button> */}\n        {/* <button\n          onClick={() => {\n            console.log(this.state.currentConfig);\n          }}\n        >\n          Log Current Configurations\n        </button> */}\n        <button\n          onClick={() => {\n            this.resetDefaultConfig(this.state.sizing);\n          }}\n        >\n          Reset to default configuration\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Display;\n"]},"metadata":{},"sourceType":"module"}
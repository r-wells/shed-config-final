{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\Desktop\\\\Clients\\\\shed-configurator\\\\shed_v4\\\\src\\\\components\\\\Dropdown\\\\Dropdown.js\";\nimport React, { useState } from \"react\";\nimport \"./Dropdown.css\";\nimport DropdownContent from \"../DropdownContent/DropdownContent\";\nimport Estimate from \"./../DropdownContent/InnerComponents/Estimate\";\nimport SelectionComponentContainer from \"./../DropdownContent/InnerComponents/SelectionComponentContainer\";\n\nconst Dropdown = ({\n  innerText,\n  type,\n  setPriceEvent,\n  estimateValue,\n  setSquareFootageEvent,\n  typesValues,\n  interiorClickEvent,\n  updateSizing,\n  updateConfiguration,\n  size,\n  setSelectedColor,\n  dataForEstimate\n}) => {\n  const [display, setDisplay] = useState(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      overflowWrap: \"break-word\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => setDisplay(!display),\n    className: \"DropdownLink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, innerText), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"24px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, display ? \"x\" : \"+\")), /*#__PURE__*/React.createElement(DropdownContent, {\n    display: display,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, type === \"Estimate\" ? /*#__PURE__*/React.createElement(Estimate, {\n    dataForEstimate: dataForEstimate,\n    estimateValue: estimateValue,\n    typesValues: typesValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(SelectionComponentContainer, {\n    type: type,\n    setPriceEvent: setPriceEvent,\n    setSquareFootageEvent: setSquareFootageEvent,\n    interiorClickEvent: interiorClickEvent,\n    updateSizing: updateSizing,\n    updateConfiguration: updateConfiguration,\n    size: size,\n    setSelectedColor: setSelectedColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default Dropdown;","map":{"version":3,"sources":["C:/Users/Ryan/Desktop/Clients/shed-configurator/shed_v4/src/components/Dropdown/Dropdown.js"],"names":["React","useState","DropdownContent","Estimate","SelectionComponentContainer","Dropdown","innerText","type","setPriceEvent","estimateValue","setSquareFootageEvent","typesValues","interiorClickEvent","updateSizing","updateConfiguration","size","setSelectedColor","dataForEstimate","display","setDisplay","overflowWrap","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,gBAAP;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,QAAP,MAAqB,+CAArB;AACA,OAAOC,2BAAP,MAAwC,kEAAxC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,SADgB;AAEhBC,EAAAA,IAFgB;AAGhBC,EAAAA,aAHgB;AAIhBC,EAAAA,aAJgB;AAKhBC,EAAAA,qBALgB;AAMhBC,EAAAA,WANgB;AAOhBC,EAAAA,kBAPgB;AAQhBC,EAAAA,YARgB;AAShBC,EAAAA,mBATgB;AAUhBC,EAAAA,IAVgB;AAWhBC,EAAAA,gBAXgB;AAYhBC,EAAAA;AAZgB,CAAD,KAaX;AACJ,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,KAAD,CAAtC;AAEA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEmB,MAAAA,YAAY,EAAE;AAAhB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,OAAO,EAAE,MAAMD,UAAU,CAAC,CAACD,OAAF,CAA5B;AAAwC,IAAA,SAAS,EAAC,cAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIZ,SAAJ,CADF,eAEE;AAAM,IAAA,KAAK,EAAE;AAAEe,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCH,OAAO,GAAG,GAAH,GAAS,GAApD,CAFF,CADF,eAKE,oBAAC,eAAD;AAAiB,IAAA,OAAO,EAAEA,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,IAAI,KAAK,UAAT,gBACC,oBAAC,QAAD;AACE,IAAA,eAAe,EAAEU,eADnB;AAEE,IAAA,aAAa,EAAER,aAFjB;AAGE,IAAA,WAAW,EAAEE,WAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAOC,oBAAC,2BAAD;AACE,IAAA,IAAI,EAAEJ,IADR;AAEE,IAAA,aAAa,EAAEC,aAFjB;AAGE,IAAA,qBAAqB,EAAEE,qBAHzB;AAIE,IAAA,kBAAkB,EAAEE,kBAJtB;AAKE,IAAA,YAAY,EAAEC,YALhB;AAME,IAAA,mBAAmB,EAAEC,mBANvB;AAOE,IAAA,IAAI,EAAEC,IAPR;AAQE,IAAA,gBAAgB,EAAEC,gBARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CALF,CADF;AA4BD,CA5CD;;AA8CA,eAAeX,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Dropdown.css\";\r\nimport DropdownContent from \"../DropdownContent/DropdownContent\";\r\nimport Estimate from \"./../DropdownContent/InnerComponents/Estimate\";\r\nimport SelectionComponentContainer from \"./../DropdownContent/InnerComponents/SelectionComponentContainer\";\r\n\r\nconst Dropdown = ({\r\n  innerText,\r\n  type,\r\n  setPriceEvent,\r\n  estimateValue,\r\n  setSquareFootageEvent,\r\n  typesValues,\r\n  interiorClickEvent,\r\n  updateSizing,\r\n  updateConfiguration,\r\n  size,\r\n  setSelectedColor,\r\n  dataForEstimate,\r\n}) => {\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  return (\r\n    <div style={{ overflowWrap: \"break-word\" }}>\r\n      <a onClick={() => setDisplay(!display)} className=\"DropdownLink\">\r\n        <p>{innerText}</p>\r\n        <span style={{ fontSize: \"24px\" }}>{display ? \"x\" : \"+\"}</span>\r\n      </a>\r\n      <DropdownContent display={display}>\r\n        {type === \"Estimate\" ? (\r\n          <Estimate\r\n            dataForEstimate={dataForEstimate}\r\n            estimateValue={estimateValue}\r\n            typesValues={typesValues}\r\n          />\r\n        ) : (\r\n          <SelectionComponentContainer\r\n            type={type}\r\n            setPriceEvent={setPriceEvent}\r\n            setSquareFootageEvent={setSquareFootageEvent}\r\n            interiorClickEvent={interiorClickEvent}\r\n            updateSizing={updateSizing}\r\n            updateConfiguration={updateConfiguration}\r\n            size={size}\r\n            setSelectedColor={setSelectedColor}\r\n          />\r\n        )}\r\n      </DropdownContent>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n"]},"metadata":{},"sourceType":"module"}
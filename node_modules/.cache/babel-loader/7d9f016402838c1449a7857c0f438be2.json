{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\Desktop\\\\Clients\\\\shed-configurator\\\\shed_v4\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Container from \"./components/Container/Container\";\nimport Title from \"./components/Title/Title\";\nimport Display from \"./components/Display/Display\";\nimport Button from \"./components/Button/Button\";\nimport Dropdown from \"./components/Dropdown/Dropdown\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputTypes: [\"Sizing\", \"Interior\", \"Exterior\", \"Siding\", \"Colors\", \"Services\"],\n      totalSquareFootage: 0,\n      types: {\n        Sizing: 0,\n        Interior: 0,\n        Exterior: 0,\n        Siding: 0,\n        Colors: 0,\n        Services: 0\n      },\n      estimate: 0,\n      sizing: \"ten\",\n      configuration: false,\n      selectedColorHexCode: \"#c8e4c5\"\n    };\n\n    this.setSelectedColor = color => {\n      const stateObj = this.state;\n      stateObj.selectedColorHexCode = color;\n      this.setState({\n        stateObj\n      }, () => console.log(\"this.state\", this.state));\n    };\n\n    this.setEstimate = () => {\n      const types = this.state.types; // console.log(\"types\", types);\n\n      let estimate = 0;\n\n      for (let type in types) {\n        estimate += types[type];\n      }\n\n      this.setState({\n        estimate\n      }, () => console.log(\"this.state\", this.state));\n    };\n\n    this.updateSizing = (sizing, value) => {\n      console.log(\"sizing in updatesizing\", sizing);\n      console.log(\"value in updatesizing\", value);\n\n      if (this.state.sizing === sizing) {\n        return;\n      } else {\n        const prevState = this.state;\n        prevState.types.Sizing = value;\n        prevState.sizing = sizing;\n        this.setState({ ...prevState\n        }, () => this.setEstimate());\n      }\n    };\n\n    this.updateConfiguration = label => {\n      console.log(\"updating configuration\");\n\n      if (this.state.configuration === label) {\n        return;\n      } else {\n        const prevState = this.state;\n        this.setState({\n          configuration: label\n        });\n      }\n    };\n\n    this.setPricing = (type, price) => {\n      // console.log(\"setPricing\");\n      const stateObj = this.state;\n      stateObj.types[type] = price;\n      this.setState({ ...stateObj\n      });\n      this.setEstimate();\n    };\n\n    this.setInteriorPricing = price => {\n      if (this.state.types.Interior === 0) {\n        this.setPricing(\"Interior\", price);\n      } else {\n        this.setPricing(\"Interior\", 0);\n      }\n    };\n\n    this.setSquareFootageEvent = (totalSquareFootage, ppsf) => {\n      const stateObj = this.state;\n      stateObj.types[\"Sizing\"] = totalSquareFootage * ppsf;\n      stateObj[totalSquareFootage] = totalSquareFootage;\n      this.setState({\n        stateObj\n      });\n      this.setEstimate();\n    };\n\n    this.checkoutOnClick = () => {\n      console.log(\"Checkout\");\n    };\n  }\n\n  //Set initial sizing to 8x8\n  componentDidMount() {\n    const stateObj = this.state;\n    stateObj.types.Sizing = 320;\n    this.setState({ ...stateObj\n    }, () => this.setEstimate());\n  }\n\n  render() {\n    const {\n      inputTypes,\n      sizing\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      key: \"1\",\n      classes: \"AppContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      key: \"2\",\n      classes: \"LeftContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      titleText: \"ModShed Series Configurator\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Display, {\n      sizing: this.state.sizing,\n      configuration: this.state.configuration,\n      color: this.state.selectedColorHexCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Container, {\n      key: \"3\",\n      classes: \"RightContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      key: \"4\",\n      classes: \"buttonContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.checkoutOnClick,\n      buttonText: \"Add To Wishlist\",\n      classes: \"Button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.checkoutOnClick,\n      buttonText: \"Checkout\",\n      classes: \"Button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Container, {\n      key: \"5\",\n      classes: \"DropdownContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, inputTypes.map(input => {\n      return /*#__PURE__*/React.createElement(Dropdown, {\n        setPriceEvent: this.setPricing,\n        setSquareFootageEvent: this.setSquareFootageEvent,\n        innerText: `Choose Your ${input}`,\n        type: input,\n        key: input,\n        interiorClickEvent: this.setInteriorPricing,\n        updateSizing: this.updateSizing,\n        updateConfiguration: this.updateConfiguration,\n        size: sizing,\n        setSelectedColor: this.setSelectedColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 19\n        }\n      });\n    }), /*#__PURE__*/React.createElement(Dropdown, {\n      key: \"Estimate\",\n      estimateValue: this.state.estimate,\n      clickEvent: this.dropdownClickHandler,\n      innerText: \"Your Estimate\",\n      type: \"Estimate\",\n      typesValues: this.state.types,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Ryan/Desktop/Clients/shed-configurator/shed_v4/src/App.js"],"names":["React","Component","Container","Title","Display","Button","Dropdown","App","state","inputTypes","totalSquareFootage","types","Sizing","Interior","Exterior","Siding","Colors","Services","estimate","sizing","configuration","selectedColorHexCode","setSelectedColor","color","stateObj","setState","console","log","setEstimate","type","updateSizing","value","prevState","updateConfiguration","label","setPricing","price","setInteriorPricing","setSquareFootageEvent","ppsf","checkoutOnClick","componentDidMount","render","map","input","dropdownClickHandler"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Container from \"./components/Container/Container\";\nimport Title from \"./components/Title/Title\";\nimport Display from \"./components/Display/Display\";\nimport Button from \"./components/Button/Button\";\nimport Dropdown from \"./components/Dropdown/Dropdown\";\n\nclass App extends Component {\n  state = {\n    inputTypes: [\n      \"Sizing\",\n      \"Interior\",\n      \"Exterior\",\n      \"Siding\",\n      \"Colors\",\n      \"Services\",\n    ],\n    totalSquareFootage: 0,\n    types: {\n      Sizing: 0,\n      Interior: 0,\n      Exterior: 0,\n      Siding: 0,\n      Colors: 0,\n      Services: 0,\n    },\n    estimate: 0,\n    sizing: \"ten\",\n    configuration: false,\n    selectedColorHexCode: \"#c8e4c5\",\n  };\n\n  setSelectedColor = (color) => {\n    const stateObj = this.state;\n    stateObj.selectedColorHexCode = color;\n    this.setState(\n      {\n        stateObj,\n      },\n      () => console.log(\"this.state\", this.state)\n    );\n  };\n\n  setEstimate = () => {\n    const types = this.state.types;\n    // console.log(\"types\", types);\n    let estimate = 0;\n    for (let type in types) {\n      estimate += types[type];\n    }\n    this.setState(\n      {\n        estimate,\n      },\n      () => console.log(\"this.state\", this.state)\n    );\n  };\n\n  //Set initial sizing to 8x8\n  componentDidMount() {\n    const stateObj = this.state;\n    stateObj.types.Sizing = 320;\n    this.setState(\n      {\n        ...stateObj,\n      },\n      () => this.setEstimate()\n    );\n  }\n\n  updateSizing = (sizing, value) => {\n    console.log(\"sizing in updatesizing\", sizing);\n    console.log(\"value in updatesizing\", value);\n    if (this.state.sizing === sizing) {\n      return;\n    } else {\n      const prevState = this.state;\n      prevState.types.Sizing = value;\n      prevState.sizing = sizing;\n      this.setState({ ...prevState }, () => this.setEstimate());\n    }\n  };\n\n  updateConfiguration = (label) => {\n    console.log(\"updating configuration\");\n    if (this.state.configuration === label) {\n      return;\n    } else {\n      const prevState = this.state;\n      this.setState({ configuration: label });\n    }\n  };\n\n  setPricing = (type, price) => {\n    // console.log(\"setPricing\");\n    const stateObj = this.state;\n    stateObj.types[type] = price;\n    this.setState({\n      ...stateObj,\n    });\n    this.setEstimate();\n  };\n\n  setInteriorPricing = (price) => {\n    if (this.state.types.Interior === 0) {\n      this.setPricing(\"Interior\", price);\n    } else {\n      this.setPricing(\"Interior\", 0);\n    }\n  };\n\n  setSquareFootageEvent = (totalSquareFootage, ppsf) => {\n    const stateObj = this.state;\n    stateObj.types[\"Sizing\"] = totalSquareFootage * ppsf;\n    stateObj[totalSquareFootage] = totalSquareFootage;\n    this.setState({\n      stateObj,\n    });\n    this.setEstimate();\n  };\n\n  checkoutOnClick = () => {\n    console.log(\"Checkout\");\n  };\n\n  render() {\n    const { inputTypes, sizing } = this.state;\n    return (\n      <div className=\"App\">\n        <Container key=\"1\" classes=\"AppContainer\">\n          <Container key=\"2\" classes=\"LeftContainer\">\n            <Title titleText=\"ModShed Series Configurator\" />\n            <Display\n              sizing={this.state.sizing}\n              configuration={this.state.configuration}\n              color={this.state.selectedColorHexCode}\n            />\n          </Container>\n          <Container key=\"3\" classes=\"RightContainer\">\n            <Container key=\"4\" classes=\"buttonContainer\">\n              <Button\n                onClick={this.checkoutOnClick}\n                buttonText=\"Add To Wishlist\"\n                classes={\"Button\"}\n              />\n              <Button\n                onClick={this.checkoutOnClick}\n                buttonText=\"Checkout\"\n                classes={\"Button\"}\n              />\n            </Container>\n            <Container key=\"5\" classes=\"DropdownContainer\">\n              {inputTypes.map((input) => {\n                return (\n                  <Dropdown\n                    setPriceEvent={this.setPricing}\n                    setSquareFootageEvent={this.setSquareFootageEvent}\n                    innerText={`Choose Your ${input}`}\n                    type={input}\n                    key={input}\n                    interiorClickEvent={this.setInteriorPricing}\n                    updateSizing={this.updateSizing}\n                    updateConfiguration={this.updateConfiguration}\n                    size={sizing}\n                    setSelectedColor={this.setSelectedColor}\n                  />\n                );\n              })}\n              <Dropdown\n                key=\"Estimate\"\n                estimateValue={this.state.estimate}\n                clickEvent={this.dropdownClickHandler}\n                innerText=\"Your Estimate\"\n                type=\"Estimate\"\n                typesValues={this.state.types}\n              />\n            </Container>\n          </Container>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
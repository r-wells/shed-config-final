{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\Desktop\\\\Clients\\\\shed-configurator\\\\shed_v4\\\\src\\\\components\\\\DropdownContent\\\\ExteriorContent\\\\ExteriorContent.js\";\nimport React, { useState } from \"react\";\nimport Container from \"../../Container/Container\";\nimport \"./ExteriorContent.css\";\nimport Button from \"../../Button/Button\";\nimport ExteriorInnerContent from \"./ExteriorInnerContent\";\nimport { getPriceOfSize } from \"../../../utils/api\";\nconst postsPerPage = 6;\n\nconst ExteriorContent = ({\n  clickEvent,\n  data,\n  size,\n  type,\n  updateConfiguration\n}) => {\n  const [displayedSide, setDisplayedSide] = useState(\"front\");\n  const [prevIndex, setPrevIndex] = useState(0);\n  const sizeData = getPriceOfSize(size)[0].data;\n  const sides = [\"front\", \"back\", \"left\", \"right\"];\n\n  const changeDisplayedSide = side => {\n    setDisplayedSide(side);\n  };\n\n  const setDisplayedDataForSide = toggle => {\n    if (toggle === prev) {\n      setPrevIndex(prevIndex - postsPerPage);\n    } else {\n      setPrevIndex(prevIndex + postsPerPage);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    classes: \"ExteriorButtonContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, sides.map(side => {\n    return /*#__PURE__*/React.createElement(Button, {\n      onClick: () => changeDisplayedSide(side),\n      classes: \"ExteriorButton\",\n      buttonText: side,\n      key: side,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    });\n  })), /*#__PURE__*/React.createElement(Container, {\n    classes: \"ExteriorInnerContentContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ExteriorInnerContent, {\n    data: sizeData[displayedSide].splice(prevIndex, postsPerPage),\n    displayedSide: displayedSide,\n    type: type,\n    size: size,\n    clickEvent: clickEvent,\n    updateConfiguration: updateConfiguration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ExteriorContent;","map":{"version":3,"sources":["C:/Users/Ryan/Desktop/Clients/shed-configurator/shed_v4/src/components/DropdownContent/ExteriorContent/ExteriorContent.js"],"names":["React","useState","Container","Button","ExteriorInnerContent","getPriceOfSize","postsPerPage","ExteriorContent","clickEvent","data","size","type","updateConfiguration","displayedSide","setDisplayedSide","prevIndex","setPrevIndex","sizeData","sides","changeDisplayedSide","side","setDisplayedDataForSide","toggle","prev","map","splice"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAO,uBAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,cAAT,QAA+B,oBAA/B;AAEA,MAAMC,YAAY,GAAG,CAArB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AACvBC,EAAAA,UADuB;AAEvBC,EAAAA,IAFuB;AAGvBC,EAAAA,IAHuB;AAIvBC,EAAAA,IAJuB;AAKvBC,EAAAA;AALuB,CAAD,KAMlB;AACJ,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,OAAD,CAAlD;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAMgB,QAAQ,GAAGZ,cAAc,CAACK,IAAD,CAAd,CAAqB,CAArB,EAAwBD,IAAzC;AAEA,QAAMS,KAAK,GAAG,CAAC,OAAD,EAAU,MAAV,EAAkB,MAAlB,EAA0B,OAA1B,CAAd;;AAEA,QAAMC,mBAAmB,GAAIC,IAAD,IAAU;AACpCN,IAAAA,gBAAgB,CAACM,IAAD,CAAhB;AACD,GAFD;;AAIA,QAAMC,uBAAuB,GAAIC,MAAD,IAAY;AAC1C,QAAIA,MAAM,KAAKC,IAAf,EAAqB;AACnBP,MAAAA,YAAY,CAACD,SAAS,GAAGT,YAAb,CAAZ;AACD,KAFD,MAEO;AACLU,MAAAA,YAAY,CAACD,SAAS,GAAGT,YAAb,CAAZ;AACD;AACF,GAND;;AAQA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,yBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,KAAK,CAACM,GAAN,CAAWJ,IAAD,IAAU;AACnB,wBACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE,MAAMD,mBAAmB,CAACC,IAAD,CADpC;AAEE,MAAA,OAAO,EAAC,gBAFV;AAGE,MAAA,UAAU,EAAEA,IAHd;AAIE,MAAA,GAAG,EAAEA,IAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD,GATA,CADH,CADF,eAaE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,+BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,oBAAD;AACE,IAAA,IAAI,EAAEH,QAAQ,CAACJ,aAAD,CAAR,CAAwBY,MAAxB,CAA+BV,SAA/B,EAA0CT,YAA1C,CADR;AAEE,IAAA,aAAa,EAAEO,aAFjB;AAGE,IAAA,IAAI,EAAEF,IAHR;AAIE,IAAA,IAAI,EAAED,IAJR;AAKE,IAAA,UAAU,EAAEF,UALd;AAME,IAAA,mBAAmB,EAAEI,mBANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbF,CADF;AA0BD,CAnDD;;AAqDA,eAAeL,eAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Container from \"../../Container/Container\";\r\nimport \"./ExteriorContent.css\";\r\nimport Button from \"../../Button/Button\";\r\nimport ExteriorInnerContent from \"./ExteriorInnerContent\";\r\nimport { getPriceOfSize } from \"../../../utils/api\";\r\n\r\nconst postsPerPage = 6;\r\n\r\nconst ExteriorContent = ({\r\n  clickEvent,\r\n  data,\r\n  size,\r\n  type,\r\n  updateConfiguration,\r\n}) => {\r\n  const [displayedSide, setDisplayedSide] = useState(\"front\");\r\n  const [prevIndex, setPrevIndex] = useState(0);\r\n  const sizeData = getPriceOfSize(size)[0].data;\r\n\r\n  const sides = [\"front\", \"back\", \"left\", \"right\"];\r\n\r\n  const changeDisplayedSide = (side) => {\r\n    setDisplayedSide(side);\r\n  };\r\n\r\n  const setDisplayedDataForSide = (toggle) => {\r\n    if (toggle === prev) {\r\n      setPrevIndex(prevIndex - postsPerPage);\r\n    } else {\r\n      setPrevIndex(prevIndex + postsPerPage);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Container classes=\"ExteriorButtonContainer\">\r\n        {sides.map((side) => {\r\n          return (\r\n            <Button\r\n              onClick={() => changeDisplayedSide(side)}\r\n              classes=\"ExteriorButton\"\r\n              buttonText={side}\r\n              key={side}\r\n            />\r\n          );\r\n        })}\r\n      </Container>\r\n      <Container classes=\"ExteriorInnerContentContainer\">\r\n        <ExteriorInnerContent\r\n          data={sizeData[displayedSide].splice(prevIndex, postsPerPage)}\r\n          displayedSide={displayedSide}\r\n          type={type}\r\n          size={size}\r\n          clickEvent={clickEvent}\r\n          updateConfiguration={updateConfiguration}\r\n        />\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ExteriorContent;\r\n"]},"metadata":{},"sourceType":"module"}